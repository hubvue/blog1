{"expireTime":9007200817926082000,"key":"transformer-remark-markdown-ast-93031afcf3c642fd88ba4bc9e8d2d52b-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"前言","position":{"start":{"line":1,"column":4,"offset":3},"end":{"line":1,"column":6,"offset":5},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":6,"offset":5},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">react</code>","position":{"start":{"line":2,"column":1,"offset":6},"end":{"line":2,"column":8,"offset":13},"indent":[]}},{"type":"text","value":"和状态管理","position":{"start":{"line":2,"column":8,"offset":13},"end":{"line":2,"column":13,"offset":18},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">redux</code>","position":{"start":{"line":2,"column":13,"offset":18},"end":{"line":2,"column":20,"offset":25},"indent":[]}},{"type":"text","value":"是紧密结合的，而本身又没有任何联系。","position":{"start":{"line":2,"column":20,"offset":25},"end":{"line":2,"column":38,"offset":43},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">react</code>","position":{"start":{"line":2,"column":38,"offset":43},"end":{"line":2,"column":45,"offset":50},"indent":[]}},{"type":"text","value":"可以不使用","position":{"start":{"line":2,"column":45,"offset":50},"end":{"line":2,"column":50,"offset":55},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">redux</code>","position":{"start":{"line":2,"column":50,"offset":55},"end":{"line":2,"column":57,"offset":62},"indent":[]}},{"type":"text","value":"管理状态，","position":{"start":{"line":2,"column":57,"offset":62},"end":{"line":2,"column":62,"offset":67},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">redux</code>","position":{"start":{"line":2,"column":62,"offset":67},"end":{"line":2,"column":69,"offset":74},"indent":[]}},{"type":"text","value":"也可以脱离","position":{"start":{"line":2,"column":69,"offset":74},"end":{"line":2,"column":74,"offset":79},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">react</code>","position":{"start":{"line":2,"column":74,"offset":79},"end":{"line":2,"column":81,"offset":86},"indent":[]}},{"type":"text","value":"独立存在。随着","position":{"start":{"line":2,"column":81,"offset":86},"end":{"line":2,"column":88,"offset":93},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">react</code>","position":{"start":{"line":2,"column":88,"offset":93},"end":{"line":2,"column":95,"offset":100},"indent":[]}},{"type":"text","value":"的项目越来越复杂，","position":{"start":{"line":2,"column":95,"offset":100},"end":{"line":2,"column":104,"offset":109},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">state</code>","position":{"start":{"line":2,"column":104,"offset":109},"end":{"line":2,"column":111,"offset":116},"indent":[]}},{"type":"text","value":"变的繁重，各种","position":{"start":{"line":2,"column":111,"offset":116},"end":{"line":2,"column":118,"offset":123},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">prop</code>","position":{"start":{"line":2,"column":118,"offset":123},"end":{"line":2,"column":124,"offset":129},"indent":[]}},{"type":"text","value":"和","position":{"start":{"line":2,"column":124,"offset":129},"end":{"line":2,"column":125,"offset":130},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">state</code>","position":{"start":{"line":2,"column":125,"offset":130},"end":{"line":2,"column":132,"offset":137},"indent":[]}},{"type":"text","value":"的转变让我们在开发过程中变得头晕眼花，","position":{"start":{"line":2,"column":132,"offset":137},"end":{"line":2,"column":151,"offset":156},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">react</code>","position":{"start":{"line":2,"column":151,"offset":156},"end":{"line":2,"column":158,"offset":163},"indent":[]}},{"type":"text","value":"本来就是一个专注于UI层的库，本不应该让繁杂的","position":{"start":{"line":2,"column":158,"offset":163},"end":{"line":2,"column":181,"offset":186},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">prop</code>","position":{"start":{"line":2,"column":181,"offset":186},"end":{"line":2,"column":187,"offset":192},"indent":[]}},{"type":"text","value":"和","position":{"start":{"line":2,"column":187,"offset":192},"end":{"line":2,"column":188,"offset":193},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">state</code>","position":{"start":{"line":2,"column":188,"offset":193},"end":{"line":2,"column":195,"offset":200},"indent":[]}},{"type":"text","value":"的逻辑掺杂进来。于是","position":{"start":{"line":2,"column":195,"offset":200},"end":{"line":2,"column":205,"offset":210},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Flux</code>","position":{"start":{"line":2,"column":205,"offset":210},"end":{"line":2,"column":211,"offset":216},"indent":[]}},{"type":"text","value":"的架构出现了，","position":{"start":{"line":2,"column":211,"offset":216},"end":{"line":2,"column":218,"offset":223},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Flux</code>","position":{"start":{"line":2,"column":218,"offset":223},"end":{"line":2,"column":224,"offset":229},"indent":[]}},{"type":"text","value":"架构模式用于抽离","position":{"start":{"line":2,"column":224,"offset":229},"end":{"line":2,"column":232,"offset":237},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">react</code>","position":{"start":{"line":2,"column":232,"offset":237},"end":{"line":2,"column":239,"offset":244},"indent":[]}},{"type":"text","value":"的","position":{"start":{"line":2,"column":239,"offset":244},"end":{"line":2,"column":240,"offset":245},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">state</code>","position":{"start":{"line":2,"column":240,"offset":245},"end":{"line":2,"column":247,"offset":252},"indent":[]}},{"type":"text","value":"能更好的去构建项目，","position":{"start":{"line":2,"column":247,"offset":252},"end":{"line":2,"column":257,"offset":262},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Flux</code>","position":{"start":{"line":2,"column":257,"offset":262},"end":{"line":2,"column":263,"offset":268},"indent":[]}},{"type":"text","value":"架构模式的实践有好多中，显然","position":{"start":{"line":2,"column":263,"offset":268},"end":{"line":2,"column":277,"offset":282},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">redux</code>","position":{"start":{"line":2,"column":277,"offset":282},"end":{"line":2,"column":284,"offset":289},"indent":[]}},{"type":"text","value":"是成功的。","position":{"start":{"line":2,"column":284,"offset":289},"end":{"line":2,"column":289,"offset":294},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":6},"end":{"line":2,"column":289,"offset":294},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"我在接触","position":{"start":{"line":4,"column":1,"offset":296},"end":{"line":4,"column":5,"offset":300},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">react</code>","position":{"start":{"line":4,"column":5,"offset":300},"end":{"line":4,"column":12,"offset":307},"indent":[]}},{"type":"text","value":"和","position":{"start":{"line":4,"column":12,"offset":307},"end":{"line":4,"column":13,"offset":308},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">redux</code>","position":{"start":{"line":4,"column":13,"offset":308},"end":{"line":4,"column":20,"offset":315},"indent":[]}},{"type":"text","value":"之前总是听好多人提起","position":{"start":{"line":4,"column":20,"offset":315},"end":{"line":4,"column":30,"offset":325},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">redux</code>","position":{"start":{"line":4,"column":30,"offset":325},"end":{"line":4,"column":37,"offset":332},"indent":[]}},{"type":"text","value":"这个东西，我心想它到底有什么魔力，让那么多的人为之惊叹，今天就来揭开","position":{"start":{"line":4,"column":37,"offset":332},"end":{"line":4,"column":71,"offset":366},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">redux</code>","position":{"start":{"line":4,"column":71,"offset":366},"end":{"line":4,"column":78,"offset":373},"indent":[]}},{"type":"text","value":"的真面目。","position":{"start":{"line":4,"column":78,"offset":373},"end":{"line":4,"column":83,"offset":378},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":296},"end":{"line":4,"column":83,"offset":378},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"redux","position":{"start":{"line":6,"column":4,"offset":383},"end":{"line":6,"column":9,"offset":388},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":380},"end":{"line":6,"column":9,"offset":388},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"前面提到","position":{"start":{"line":7,"column":1,"offset":389},"end":{"line":7,"column":5,"offset":393},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">redux</code>","position":{"start":{"line":7,"column":5,"offset":393},"end":{"line":7,"column":12,"offset":400},"indent":[]}},{"type":"text","value":"是可以脱离","position":{"start":{"line":7,"column":12,"offset":400},"end":{"line":7,"column":17,"offset":405},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">react</code>","position":{"start":{"line":7,"column":17,"offset":405},"end":{"line":7,"column":24,"offset":412},"indent":[]}},{"type":"text","value":"存在的，这句话的意思是","position":{"start":{"line":7,"column":24,"offset":412},"end":{"line":7,"column":35,"offset":423},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">redux</code>","position":{"start":{"line":7,"column":35,"offset":423},"end":{"line":7,"column":42,"offset":430},"indent":[]}},{"type":"text","value":"并不是依附于","position":{"start":{"line":7,"column":42,"offset":430},"end":{"line":7,"column":48,"offset":436},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">react</code>","position":{"start":{"line":7,"column":48,"offset":436},"end":{"line":7,"column":55,"offset":443},"indent":[]}},{"type":"text","value":"的，即便是用","position":{"start":{"line":7,"column":55,"offset":443},"end":{"line":7,"column":61,"offset":449},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">jQuery</code>","position":{"start":{"line":7,"column":61,"offset":449},"end":{"line":7,"column":69,"offset":457},"indent":[]}},{"type":"text","value":"+","position":{"start":{"line":7,"column":69,"offset":457},"end":{"line":7,"column":70,"offset":458},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">redux</code>","position":{"start":{"line":7,"column":70,"offset":458},"end":{"line":7,"column":77,"offset":465},"indent":[]}},{"type":"text","value":"也是可以的。","position":{"start":{"line":7,"column":77,"offset":465},"end":{"line":7,"column":83,"offset":471},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">redux</code>","position":{"start":{"line":7,"column":83,"offset":471},"end":{"line":7,"column":90,"offset":478},"indent":[]}},{"type":"text","value":"提供的是一种状态管理的方式，同时也定义了一种管理状态的规则，所有需要使用这个小而美的库的项目都必须遵循这个规则，也正是这个规则使用redux再书写过程中有了可预测性和可追溯性。","position":{"start":{"line":7,"column":90,"offset":478},"end":{"line":7,"column":178,"offset":566},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":389},"end":{"line":7,"column":178,"offset":566},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"redux的设计原则","position":{"start":{"line":9,"column":5,"offset":572},"end":{"line":9,"column":15,"offset":582},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":568},"end":{"line":9,"column":15,"offset":582},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"谈","position":{"start":{"line":10,"column":1,"offset":583},"end":{"line":10,"column":2,"offset":584},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">redux</code>","position":{"start":{"line":10,"column":2,"offset":584},"end":{"line":10,"column":9,"offset":591},"indent":[]}},{"type":"text","value":"必然要谈谈它的设计原则，就如同想要更明白的了解一样东西，就需要先了解它是怎么来的，当然历史明白上面这些就够了。","position":{"start":{"line":10,"column":9,"offset":591},"end":{"line":10,"column":64,"offset":646},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":583},"end":{"line":10,"column":64,"offset":646},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">redux</code>","position":{"start":{"line":12,"column":1,"offset":648},"end":{"line":12,"column":8,"offset":655},"indent":[]}},{"type":"text","value":"有三大设计原则","position":{"start":{"line":12,"column":8,"offset":655},"end":{"line":12,"column":15,"offset":662},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":648},"end":{"line":12,"column":15,"offset":662},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"单一数据源","position":{"start":{"line":14,"column":4,"offset":667},"end":{"line":14,"column":9,"offset":672},"indent":[]}}],"position":{"start":{"line":14,"column":4,"offset":667},"end":{"line":14,"column":9,"offset":672},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":664},"end":{"line":14,"column":9,"offset":672},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"状态是只读的","position":{"start":{"line":15,"column":4,"offset":676},"end":{"line":15,"column":10,"offset":682},"indent":[]}}],"position":{"start":{"line":15,"column":4,"offset":676},"end":{"line":15,"column":10,"offset":682},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":673},"end":{"line":15,"column":10,"offset":682},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"使用纯函数编写reducer","position":{"start":{"line":16,"column":4,"offset":686},"end":{"line":16,"column":18,"offset":700},"indent":[]}}],"position":{"start":{"line":16,"column":4,"offset":686},"end":{"line":16,"column":18,"offset":700},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":683},"end":{"line":16,"column":18,"offset":700},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":664},"end":{"line":16,"column":18,"offset":700},"indent":[1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"1.单一数据源","position":{"start":{"line":18,"column":6,"offset":707},"end":{"line":18,"column":13,"offset":714},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":702},"end":{"line":18,"column":13,"offset":714},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"单一数据源的意思是说整个","position":{"start":{"line":19,"column":1,"offset":715},"end":{"line":19,"column":13,"offset":727},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">react</code>","position":{"start":{"line":19,"column":13,"offset":727},"end":{"line":19,"column":20,"offset":734},"indent":[]}},{"type":"text","value":"项目的","position":{"start":{"line":19,"column":20,"offset":734},"end":{"line":19,"column":23,"offset":737},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">state</code>","position":{"start":{"line":19,"column":23,"offset":737},"end":{"line":19,"column":30,"offset":744},"indent":[]}},{"type":"text","value":"都存放在一起，也可以认为存在一个大对象中，单一数据源可以让我们在项目中更专注于数据源的设计与构建上。","position":{"start":{"line":19,"column":30,"offset":744},"end":{"line":19,"column":80,"offset":794},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":715},"end":{"line":19,"column":80,"offset":794},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"2.状态是只读的","position":{"start":{"line":20,"column":6,"offset":800},"end":{"line":20,"column":14,"offset":808},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":795},"end":{"line":20,"column":14,"offset":808},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"使用过","position":{"start":{"line":21,"column":1,"offset":809},"end":{"line":21,"column":4,"offset":812},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">redux</code>","position":{"start":{"line":21,"column":4,"offset":812},"end":{"line":21,"column":11,"offset":819},"indent":[]}},{"type":"text","value":"都知道，视图是通过","position":{"start":{"line":21,"column":11,"offset":819},"end":{"line":21,"column":20,"offset":828},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">store.getState()</code>","position":{"start":{"line":21,"column":20,"offset":828},"end":{"line":21,"column":38,"offset":846},"indent":[]}},{"type":"text","value":"方法来获取状态的，通过","position":{"start":{"line":21,"column":38,"offset":846},"end":{"line":21,"column":49,"offset":857},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">dispatch</code>","position":{"start":{"line":21,"column":49,"offset":857},"end":{"line":21,"column":59,"offset":867},"indent":[]}},{"type":"text","value":"派发","position":{"start":{"line":21,"column":59,"offset":867},"end":{"line":21,"column":61,"offset":869},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">action</code>","position":{"start":{"line":21,"column":61,"offset":869},"end":{"line":21,"column":69,"offset":877},"indent":[]}},{"type":"text","value":"来改变状态。状态是只读的也就是说我们只能通过","position":{"start":{"line":21,"column":69,"offset":877},"end":{"line":21,"column":91,"offset":899},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">stiore.getState()</code>","position":{"start":{"line":21,"column":91,"offset":899},"end":{"line":21,"column":110,"offset":918},"indent":[]}},{"type":"text","value":"来获取状态，只能通过","position":{"start":{"line":21,"column":110,"offset":918},"end":{"line":21,"column":120,"offset":928},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">dispatch</code>","position":{"start":{"line":21,"column":120,"offset":928},"end":{"line":21,"column":130,"offset":938},"indent":[]}},{"type":"text","value":"派发","position":{"start":{"line":21,"column":130,"offset":938},"end":{"line":21,"column":132,"offset":940},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">action</code>","position":{"start":{"line":21,"column":132,"offset":940},"end":{"line":21,"column":140,"offset":948},"indent":[]}},{"type":"text","value":"来改变状态。这也体现了单一数据流动，让我们在构建项目的时候只需要关于一个方向的数据流动。","position":{"start":{"line":21,"column":140,"offset":948},"end":{"line":21,"column":184,"offset":992},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":809},"end":{"line":21,"column":184,"offset":992},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"3.使用纯函数编写reducer","position":{"start":{"line":22,"column":6,"offset":998},"end":{"line":22,"column":22,"offset":1014},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":993},"end":{"line":22,"column":22,"offset":1014},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"我当时在学的时候也是有这样的疑问：为什么要使纯函数来写，什么是纯函数？","position":{"start":{"line":23,"column":1,"offset":1015},"end":{"line":23,"column":36,"offset":1050},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":1015},"end":{"line":23,"column":36,"offset":1050},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"所谓纯函数：对于一个函数来说相同的输入必定有相同的输出， 即不依赖外部环境，也不改变外部环境，这样的函数就叫做纯函数。纯函数纯的，是没有副作用的。","position":{"start":{"line":25,"column":3,"offset":1054},"end":{"line":25,"column":76,"offset":1127},"indent":[]}}],"position":{"start":{"line":25,"column":3,"offset":1054},"end":{"line":25,"column":76,"offset":1127},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":1052},"end":{"line":25,"column":76,"offset":1127},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"明白了纯函数，那么在写","position":{"start":{"line":27,"column":1,"offset":1129},"end":{"line":27,"column":12,"offset":1140},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">reducer</code>","position":{"start":{"line":27,"column":12,"offset":1140},"end":{"line":27,"column":21,"offset":1149},"indent":[]}},{"type":"text","value":"的时候一定见过这么一段代码。","position":{"start":{"line":27,"column":21,"offset":1149},"end":{"line":27,"column":35,"offset":1163},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":1129},"end":{"line":27,"column":35,"offset":1163},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token function\">reducer</span><span class=\"token punctuation\">(</span>initstate <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>action<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":28,"column":1,"offset":1164},"end":{"line":30,"column":4,"offset":1219},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"上面代码，再结合纯函数，就可以说对于特定的","position":{"start":{"line":31,"column":1,"offset":1220},"end":{"line":31,"column":22,"offset":1241},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">action</code>","position":{"start":{"line":31,"column":22,"offset":1241},"end":{"line":31,"column":30,"offset":1249},"indent":[]}},{"type":"text","value":"和","position":{"start":{"line":31,"column":30,"offset":1249},"end":{"line":31,"column":31,"offset":1250},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">initstate</code>","position":{"start":{"line":31,"column":31,"offset":1250},"end":{"line":31,"column":42,"offset":1261},"indent":[]}},{"type":"text","value":"必定会得到相同的","position":{"start":{"line":31,"column":42,"offset":1261},"end":{"line":31,"column":50,"offset":1269},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">state</code>","position":{"start":{"line":31,"column":50,"offset":1269},"end":{"line":31,"column":57,"offset":1276},"indent":[]}},{"type":"text","value":"，这里正是体现了","position":{"start":{"line":31,"column":57,"offset":1276},"end":{"line":31,"column":65,"offset":1284},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">redux</code>","position":{"start":{"line":31,"column":65,"offset":1284},"end":{"line":31,"column":72,"offset":1291},"indent":[]}},{"type":"text","value":"的可预测性。","position":{"start":{"line":31,"column":72,"offset":1291},"end":{"line":31,"column":78,"offset":1297},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":1220},"end":{"line":31,"column":78,"offset":1297},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"redux的四个角色","position":{"start":{"line":33,"column":5,"offset":1303},"end":{"line":33,"column":15,"offset":1313},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":1299},"end":{"line":33,"column":15,"offset":1313},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">redux</code>","position":{"start":{"line":34,"column":1,"offset":1314},"end":{"line":34,"column":8,"offset":1321},"indent":[]}},{"type":"text","value":"提供了一系列规则来规定我们来写代码。可以大致分为四个角色：","position":{"start":{"line":34,"column":8,"offset":1321},"end":{"line":34,"column":37,"offset":1350},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":1314},"end":{"line":34,"column":37,"offset":1350},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"action","position":{"start":{"line":36,"column":4,"offset":1355},"end":{"line":36,"column":10,"offset":1361},"indent":[]}}],"position":{"start":{"line":36,"column":4,"offset":1355},"end":{"line":36,"column":10,"offset":1361},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":1352},"end":{"line":36,"column":10,"offset":1361},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"reducer","position":{"start":{"line":37,"column":4,"offset":1365},"end":{"line":37,"column":11,"offset":1372},"indent":[]}}],"position":{"start":{"line":37,"column":4,"offset":1365},"end":{"line":37,"column":11,"offset":1372},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1362},"end":{"line":37,"column":11,"offset":1372},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"dispatch","position":{"start":{"line":38,"column":4,"offset":1376},"end":{"line":38,"column":12,"offset":1384},"indent":[]}}],"position":{"start":{"line":38,"column":4,"offset":1376},"end":{"line":38,"column":12,"offset":1384},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":1373},"end":{"line":38,"column":12,"offset":1384},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"store","position":{"start":{"line":39,"column":4,"offset":1388},"end":{"line":39,"column":9,"offset":1393},"indent":[]}}],"position":{"start":{"line":39,"column":4,"offset":1388},"end":{"line":39,"column":9,"offset":1393},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":1385},"end":{"line":39,"column":9,"offset":1393},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":1352},"end":{"line":39,"column":9,"offset":1393},"indent":[1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"1.action","position":{"start":{"line":41,"column":6,"offset":1400},"end":{"line":41,"column":14,"offset":1408},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":1395},"end":{"line":41,"column":14,"offset":1408},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">action</code>","position":{"start":{"line":42,"column":1,"offset":1409},"end":{"line":42,"column":9,"offset":1417},"indent":[]}},{"type":"text","value":"是承载状态的载体，一般","position":{"start":{"line":42,"column":9,"offset":1417},"end":{"line":42,"column":20,"offset":1428},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">action</code>","position":{"start":{"line":42,"column":20,"offset":1428},"end":{"line":42,"column":28,"offset":1436},"indent":[]}},{"type":"text","value":"将视图所产出的数据，发送到reducer进行处理。","position":{"start":{"line":42,"column":28,"offset":1436},"end":{"line":42,"column":53,"offset":1461},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">action</code>","position":{"start":{"line":42,"column":53,"offset":1461},"end":{"line":42,"column":61,"offset":1469},"indent":[]}},{"type":"text","value":"的书写格式一般是这样：","position":{"start":{"line":42,"column":61,"offset":1469},"end":{"line":42,"column":72,"offset":1480},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":1409},"end":{"line":42,"column":72,"offset":1480},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> addAction <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    type<span class=\"token punctuation\">:</span><span class=\"token string\">\"ADD\"</span><span class=\"token punctuation\">,</span>\n    value<span class=\"token punctuation\">:</span><span class=\"token operator\">...</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":43,"column":1,"offset":1481},"end":{"line":48,"column":4,"offset":1544},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">action</code>","position":{"start":{"line":49,"column":1,"offset":1545},"end":{"line":49,"column":9,"offset":1553},"indent":[]}},{"type":"text","value":"其实就是一个JavaScript对象，它必须要有一个type属性用来标识这个","position":{"start":{"line":49,"column":9,"offset":1553},"end":{"line":49,"column":47,"offset":1591},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">action</code>","position":{"start":{"line":49,"column":47,"offset":1591},"end":{"line":49,"column":55,"offset":1599},"indent":[]}},{"type":"text","value":"是干嘛的(也可以认为家的地址，去reducer中找家)，value属性是action携带来自视图的数据。","position":{"start":{"line":49,"column":55,"offset":1599},"end":{"line":49,"column":107,"offset":1651},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":1545},"end":{"line":49,"column":107,"offset":1651},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">action</code>","position":{"start":{"line":51,"column":1,"offset":1653},"end":{"line":51,"column":9,"offset":1661},"indent":[]}},{"type":"text","value":"的表示方式也可以是一个函数，这样可以更方面的构建","position":{"start":{"line":51,"column":9,"offset":1661},"end":{"line":51,"column":33,"offset":1685},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">action</code>","position":{"start":{"line":51,"column":33,"offset":1685},"end":{"line":51,"column":41,"offset":1693},"indent":[]}},{"type":"text","value":",但这个函数必须返回一个对象。","position":{"start":{"line":51,"column":41,"offset":1693},"end":{"line":51,"column":56,"offset":1708},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":1653},"end":{"line":51,"column":56,"offset":1708},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">addAction</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">val</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    type<span class=\"token punctuation\">:</span><span class=\"token string\">\"ADD\"</span><span class=\"token punctuation\">,</span>\n    value<span class=\"token punctuation\">:</span> val\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":52,"column":1,"offset":1709},"end":{"line":57,"column":4,"offset":1782},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"这样拿到的数据就灵活多了。","position":{"start":{"line":58,"column":1,"offset":1783},"end":{"line":58,"column":14,"offset":1796},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":1783},"end":{"line":58,"column":14,"offset":1796},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"对于","position":{"start":{"line":60,"column":1,"offset":1798},"end":{"line":60,"column":3,"offset":1800},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">action</code>","position":{"start":{"line":60,"column":3,"offset":1800},"end":{"line":60,"column":11,"offset":1808},"indent":[]}},{"type":"text","value":"的type属性，一般如果action变的庞大的话会把所有的type抽离出来到一个constants中，例如：","position":{"start":{"line":60,"column":11,"offset":1808},"end":{"line":60,"column":65,"offset":1862},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":1798},"end":{"line":60,"column":65,"offset":1862},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token constant\">ADDTODO</span> <span class=\"token operator\">=</span> <span class=\"token string\">'ADDTODO'</span><span class=\"token punctuation\">,</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">DELETETODO</span> <span class=\"token operator\">=</span> <span class=\"token string\">'DELETEDOTO'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token constant\">ADDTODO</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">DELETETODO</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":61,"column":1,"offset":1863},"end":{"line":69,"column":4,"offset":1972},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"这样可以让type更清晰一些。","position":{"start":{"line":70,"column":1,"offset":1973},"end":{"line":70,"column":16,"offset":1988},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":1973},"end":{"line":70,"column":16,"offset":1988},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"2.reducer","position":{"start":{"line":72,"column":6,"offset":1995},"end":{"line":72,"column":15,"offset":2004},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":1990},"end":{"line":72,"column":15,"offset":2004},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":" ","position":{"start":{"line":73,"column":1,"offset":2005},"end":{"line":73,"column":2,"offset":2006},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">reducer</code>","position":{"start":{"line":73,"column":2,"offset":2006},"end":{"line":73,"column":11,"offset":2015},"indent":[]}},{"type":"text","value":"指定了应用状态的变化如何响应 ","position":{"start":{"line":73,"column":11,"offset":2015},"end":{"line":73,"column":26,"offset":2030},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">actions</code>","position":{"start":{"line":73,"column":26,"offset":2030},"end":{"line":73,"column":35,"offset":2039},"indent":[]}},{"type":"text","value":" 并发送到 ","position":{"start":{"line":73,"column":35,"offset":2039},"end":{"line":73,"column":41,"offset":2045},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">store</code>","position":{"start":{"line":73,"column":41,"offset":2045},"end":{"line":73,"column":48,"offset":2052},"indent":[]}},{"type":"text","value":"。 在","position":{"start":{"line":73,"column":48,"offset":2052},"end":{"line":73,"column":51,"offset":2055},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">redux</code>","position":{"start":{"line":73,"column":51,"offset":2055},"end":{"line":73,"column":58,"offset":2062},"indent":[]}},{"type":"text","value":"的设计原则中提到","position":{"start":{"line":73,"column":58,"offset":2062},"end":{"line":73,"column":66,"offset":2070},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">使用纯函数来编写reducer</code>","position":{"start":{"line":73,"column":66,"offset":2070},"end":{"line":73,"column":83,"offset":2087},"indent":[]}},{"type":"text","value":"，目的是为了让state变的可预测。","position":{"start":{"line":73,"column":83,"offset":2087},"end":{"line":73,"column":101,"offset":2105},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">reducer</code>","position":{"start":{"line":73,"column":101,"offset":2105},"end":{"line":73,"column":110,"offset":2114},"indent":[]}},{"type":"text","value":"的书写方式一般是这样：","position":{"start":{"line":73,"column":110,"offset":2114},"end":{"line":73,"column":121,"offset":2125},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":2005},"end":{"line":73,"column":121,"offset":2125},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> reducer <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>state <span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>action<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">case</span> <span class=\"token punctuation\">:</span>\n           <span class=\"token operator\">...</span><span class=\"token operator\">...</span>\n        <span class=\"token keyword\">case</span> <span class=\"token punctuation\">:</span>\n           <span class=\"token operator\">...</span><span class=\"token operator\">...</span>\n        <span class=\"token keyword\">case</span> <span class=\"token punctuation\">:</span>\n           <span class=\"token operator\">...</span><span class=\"token operator\">...</span>\n        <span class=\"token keyword\">default</span> <span class=\"token punctuation\">:</span>\n           <span class=\"token keyword\">return</span> state<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":74,"column":1,"offset":2126},"end":{"line":87,"column":5,"offset":2360},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"使用switch判断出什么样的","position":{"start":{"line":88,"column":1,"offset":2361},"end":{"line":88,"column":16,"offset":2376},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">action</code>","position":{"start":{"line":88,"column":16,"offset":2376},"end":{"line":88,"column":24,"offset":2384},"indent":[]}},{"type":"text","value":"应该使用什么样的逻辑去处理。","position":{"start":{"line":88,"column":24,"offset":2384},"end":{"line":88,"column":38,"offset":2398},"indent":[]}}],"position":{"start":{"line":88,"column":1,"offset":2361},"end":{"line":88,"column":38,"offset":2398},"indent":[]}},{"type":"heading","depth":5,"children":[{"type":"text","value":"拆分reducer","position":{"start":{"line":90,"column":7,"offset":2407},"end":{"line":90,"column":16,"offset":2416},"indent":[]}}],"position":{"start":{"line":90,"column":1,"offset":2401},"end":{"line":90,"column":16,"offset":2416},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"当随着业务的增多，那么","position":{"start":{"line":91,"column":1,"offset":2417},"end":{"line":91,"column":12,"offset":2428},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">reducer</code>","position":{"start":{"line":91,"column":12,"offset":2428},"end":{"line":91,"column":21,"offset":2437},"indent":[]}},{"type":"text","value":"也随着增大，显然一个","position":{"start":{"line":91,"column":21,"offset":2437},"end":{"line":91,"column":31,"offset":2447},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">reducer</code>","position":{"start":{"line":91,"column":31,"offset":2447},"end":{"line":91,"column":40,"offset":2456},"indent":[]}},{"type":"text","value":"是不可能的，于是必须要拆分","position":{"start":{"line":91,"column":40,"offset":2456},"end":{"line":91,"column":53,"offset":2469},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">reducer</code>","position":{"start":{"line":91,"column":53,"offset":2469},"end":{"line":91,"column":62,"offset":2478},"indent":[]}},{"type":"text","value":"，拆分","position":{"start":{"line":91,"column":62,"offset":2478},"end":{"line":91,"column":65,"offset":2481},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">reducer</code>","position":{"start":{"line":91,"column":65,"offset":2481},"end":{"line":91,"column":74,"offset":2490},"indent":[]}},{"type":"text","value":"也是有一定的套路的：比如拆分一个TodoList，就可以把todos操作放在一起，把对todo无关的放在一起，最终形成一个根","position":{"start":{"line":91,"column":74,"offset":2490},"end":{"line":91,"column":136,"offset":2552},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">reducer。</code>","position":{"start":{"line":91,"column":136,"offset":2552},"end":{"line":91,"column":146,"offset":2562},"indent":[]}}],"position":{"start":{"line":91,"column":1,"offset":2417},"end":{"line":91,"column":146,"offset":2562},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">visibilityFilter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token punctuation\">,</span>action</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">case</span> <span class=\"token punctuation\">:</span>\n            <span class=\"token operator\">...</span><span class=\"token operator\">...</span>\n        <span class=\"token keyword\">case</span> <span class=\"token punctuation\">:</span>\n            <span class=\"token operator\">...</span><span class=\"token operator\">...</span>\n        <span class=\"token keyword\">default</span> <span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> state<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">todos</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token punctuation\">,</span>action</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">case</span> <span class=\"token punctuation\">:</span>\n            <span class=\"token operator\">...</span><span class=\"token operator\">...</span>\n        <span class=\"token keyword\">case</span> <span class=\"token punctuation\">:</span>\n            <span class=\"token operator\">...</span><span class=\"token operator\">...</span>\n        <span class=\"token keyword\">default</span> <span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> state<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//根reducer</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">rootReducer</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> action</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    visibilityFilter<span class=\"token punctuation\">:</span> <span class=\"token function\">visibilityFilter</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">.</span>visibilityFilter<span class=\"token punctuation\">,</span> action<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> \n    todos<span class=\"token punctuation\">:</span> <span class=\"token function\">todos</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">.</span>todos<span class=\"token punctuation\">,</span> action<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":92,"column":1,"offset":2563},"end":{"line":120,"column":4,"offset":3115},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"这样做的好处在于业务逻辑的分离，让根","position":{"start":{"line":121,"column":1,"offset":3116},"end":{"line":121,"column":19,"offset":3134},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">reducer</code>","position":{"start":{"line":121,"column":19,"offset":3134},"end":{"line":121,"column":28,"offset":3143},"indent":[]}},{"type":"text","value":"不再那么繁重。好在","position":{"start":{"line":121,"column":28,"offset":3143},"end":{"line":121,"column":37,"offset":3152},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">redux</code>","position":{"start":{"line":121,"column":37,"offset":3152},"end":{"line":121,"column":44,"offset":3159},"indent":[]}},{"type":"text","value":"提供了","position":{"start":{"line":121,"column":44,"offset":3159},"end":{"line":121,"column":47,"offset":3162},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">combineReducers</code>","position":{"start":{"line":121,"column":47,"offset":3162},"end":{"line":121,"column":64,"offset":3179},"indent":[]}},{"type":"text","value":"方法用于构建","position":{"start":{"line":121,"column":64,"offset":3179},"end":{"line":121,"column":70,"offset":3185},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">rootReducer</code>","position":{"start":{"line":121,"column":70,"offset":3185},"end":{"line":121,"column":83,"offset":3198},"indent":[]}}],"position":{"start":{"line":121,"column":1,"offset":3116},"end":{"line":121,"column":83,"offset":3198},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> rootReducer <span class=\"token operator\">=</span> <span class=\"token function\">combineReducers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    visibilityFilter<span class=\"token punctuation\">,</span>\n    todos<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":122,"column":1,"offset":3199},"end":{"line":127,"column":4,"offset":3282},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"这部分代码和上面rootReducer的作用完全相同。它的原理是通过传入对象的key-value把所有的state进行一个糅合。","position":{"start":{"line":128,"column":1,"offset":3283},"end":{"line":128,"column":65,"offset":3347},"indent":[]}}],"position":{"start":{"line":128,"column":1,"offset":3283},"end":{"line":128,"column":65,"offset":3347},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"3.dispatch","position":{"start":{"line":130,"column":6,"offset":3354},"end":{"line":130,"column":16,"offset":3364},"indent":[]}}],"position":{"start":{"line":130,"column":1,"offset":3349},"end":{"line":130,"column":16,"offset":3364},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">dispatch</code>","position":{"start":{"line":131,"column":1,"offset":3365},"end":{"line":131,"column":11,"offset":3375},"indent":[]}},{"type":"text","value":"的作用是派发一个","position":{"start":{"line":131,"column":11,"offset":3375},"end":{"line":131,"column":19,"offset":3383},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">action</code>","position":{"start":{"line":131,"column":19,"offset":3383},"end":{"line":131,"column":27,"offset":3391},"indent":[]}},{"type":"text","value":"去执行","position":{"start":{"line":131,"column":27,"offset":3391},"end":{"line":131,"column":30,"offset":3394},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">reducer</code>","position":{"start":{"line":131,"column":30,"offset":3394},"end":{"line":131,"column":39,"offset":3403},"indent":[]}},{"type":"text","value":"。我觉得","position":{"start":{"line":131,"column":39,"offset":3403},"end":{"line":131,"column":43,"offset":3407},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">dispatch</code>","position":{"start":{"line":131,"column":43,"offset":3407},"end":{"line":131,"column":53,"offset":3417},"indent":[]}},{"type":"text","value":"就是一个发布者，和","position":{"start":{"line":131,"column":53,"offset":3417},"end":{"line":131,"column":62,"offset":3426},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">subscribe</code>","position":{"start":{"line":131,"column":62,"offset":3426},"end":{"line":131,"column":73,"offset":3437},"indent":[]}},{"type":"text","value":"一起组合成订阅发布者模式。使","position":{"start":{"line":131,"column":73,"offset":3437},"end":{"line":131,"column":87,"offset":3451},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">dispatch</code>","position":{"start":{"line":131,"column":87,"offset":3451},"end":{"line":131,"column":97,"offset":3461},"indent":[]}},{"type":"text","value":"派发：","position":{"start":{"line":131,"column":97,"offset":3461},"end":{"line":131,"column":100,"offset":3464},"indent":[]}}],"position":{"start":{"line":131,"column":1,"offset":3365},"end":{"line":131,"column":100,"offset":3464},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> action <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    type<span class=\"token punctuation\">:</span> <span class=\"token string\">\"ADD\"</span><span class=\"token punctuation\">,</span>\n    value<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Hello Redux\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":132,"column":1,"offset":3465},"end":{"line":138,"column":4,"offset":3554},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"4.store","position":{"start":{"line":139,"column":6,"offset":3560},"end":{"line":139,"column":13,"offset":3567},"indent":[]}}],"position":{"start":{"line":139,"column":1,"offset":3555},"end":{"line":139,"column":13,"offset":3567},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">store</code>","position":{"start":{"line":140,"column":1,"offset":3568},"end":{"line":140,"column":8,"offset":3575},"indent":[]}},{"type":"text","value":"可以说是","position":{"start":{"line":140,"column":8,"offset":3575},"end":{"line":140,"column":12,"offset":3579},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">redux</code>","position":{"start":{"line":140,"column":12,"offset":3579},"end":{"line":140,"column":19,"offset":3586},"indent":[]}},{"type":"text","value":"的核心了。开头也提到","position":{"start":{"line":140,"column":19,"offset":3586},"end":{"line":140,"column":29,"offset":3596},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">store</code>","position":{"start":{"line":140,"column":29,"offset":3596},"end":{"line":140,"column":36,"offset":3603},"indent":[]}},{"type":"text","value":"是","position":{"start":{"line":140,"column":36,"offset":3603},"end":{"line":140,"column":37,"offset":3604},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">redux</code>","position":{"start":{"line":140,"column":37,"offset":3604},"end":{"line":140,"column":44,"offset":3611},"indent":[]}},{"type":"text","value":"状态管理的唯一数据源，除此之外，","position":{"start":{"line":140,"column":44,"offset":3611},"end":{"line":140,"column":60,"offset":3627},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">store</code>","position":{"start":{"line":140,"column":60,"offset":3627},"end":{"line":140,"column":67,"offset":3634},"indent":[]}},{"type":"text","value":"还是将","position":{"start":{"line":140,"column":67,"offset":3634},"end":{"line":140,"column":70,"offset":3637},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">dispatch</code>","position":{"start":{"line":140,"column":70,"offset":3637},"end":{"line":140,"column":80,"offset":3647},"indent":[]}},{"type":"text","value":"、","position":{"start":{"line":140,"column":80,"offset":3647},"end":{"line":140,"column":81,"offset":3648},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">reducer</code>","position":{"start":{"line":140,"column":81,"offset":3648},"end":{"line":140,"column":90,"offset":3657},"indent":[]}},{"type":"text","value":"等联系起来的命脉。","position":{"start":{"line":140,"column":90,"offset":3657},"end":{"line":140,"column":99,"offset":3666},"indent":[]}}],"position":{"start":{"line":140,"column":1,"offset":3568},"end":{"line":140,"column":99,"offset":3666},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">store</code>","position":{"start":{"line":142,"column":1,"offset":3668},"end":{"line":142,"column":8,"offset":3675},"indent":[]}},{"type":"text","value":"通过","position":{"start":{"line":142,"column":8,"offset":3675},"end":{"line":142,"column":10,"offset":3677},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">redux</code>","position":{"start":{"line":142,"column":10,"offset":3677},"end":{"line":142,"column":17,"offset":3684},"indent":[]}},{"type":"text","value":"提供的","position":{"start":{"line":142,"column":17,"offset":3684},"end":{"line":142,"column":20,"offset":3687},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">createStore</code>","position":{"start":{"line":142,"column":20,"offset":3687},"end":{"line":142,"column":33,"offset":3700},"indent":[]}},{"type":"text","value":"创建，它是一个对象，有如下属性：","position":{"start":{"line":142,"column":33,"offset":3700},"end":{"line":142,"column":49,"offset":3716},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":3668},"end":{"line":142,"column":49,"offset":3716},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"store.getState()  获取状态的唯一途径","position":{"start":{"line":143,"column":3,"offset":3719},"end":{"line":143,"column":30,"offset":3746},"indent":[]}}],"position":{"start":{"line":143,"column":3,"offset":3719},"end":{"line":143,"column":30,"offset":3746},"indent":[]}}],"position":{"start":{"line":143,"column":1,"offset":3717},"end":{"line":143,"column":30,"offset":3746},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"store.dispatch(action) 派发action响应reducer","position":{"start":{"line":144,"column":3,"offset":3749},"end":{"line":144,"column":43,"offset":3789},"indent":[]}}],"position":{"start":{"line":144,"column":3,"offset":3749},"end":{"line":144,"column":43,"offset":3789},"indent":[]}}],"position":{"start":{"line":144,"column":1,"offset":3747},"end":{"line":144,"column":43,"offset":3789},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"store.subscribe(handler) 监听状态的变化","position":{"start":{"line":145,"column":3,"offset":3792},"end":{"line":145,"column":35,"offset":3824},"indent":[]}}],"position":{"start":{"line":145,"column":3,"offset":3792},"end":{"line":145,"column":35,"offset":3824},"indent":[]}}],"position":{"start":{"line":145,"column":1,"offset":3790},"end":{"line":145,"column":35,"offset":3824},"indent":[]}}],"position":{"start":{"line":143,"column":1,"offset":3717},"end":{"line":145,"column":35,"offset":3824},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"创建store：","position":{"start":{"line":147,"column":1,"offset":3826},"end":{"line":147,"column":9,"offset":3834},"indent":[]}}],"position":{"start":{"line":147,"column":1,"offset":3826},"end":{"line":147,"column":9,"offset":3834},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> Redux<span class=\"token punctuation\">.</span><span class=\"token function\">createStore</span><span class=\"token punctuation\">(</span>reducer<span class=\"token punctuation\">,</span>initialState<span class=\"token punctuation\">,</span>enhancer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//1. reducer就是我们书写的reducer</span>\n<span class=\"token comment\">//2. initialState是初始化状态</span>\n<span class=\"token comment\">//3. enhancer是中间件</span></code></pre></div>","position":{"start":{"line":148,"column":1,"offset":3835},"end":{"line":153,"column":4,"offset":3977},"indent":[1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Middleware","position":{"start":{"line":154,"column":5,"offset":3982},"end":{"line":154,"column":15,"offset":3992},"indent":[]}}],"position":{"start":{"line":154,"column":1,"offset":3978},"end":{"line":154,"column":15,"offset":3992},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"在创建","position":{"start":{"line":155,"column":1,"offset":3993},"end":{"line":155,"column":4,"offset":3996},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">store</code>","position":{"start":{"line":155,"column":4,"offset":3996},"end":{"line":155,"column":11,"offset":4003},"indent":[]}},{"type":"text","value":"的时候","position":{"start":{"line":155,"column":11,"offset":4003},"end":{"line":155,"column":14,"offset":4006},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">createStore</code>","position":{"start":{"line":155,"column":14,"offset":4006},"end":{"line":155,"column":27,"offset":4019},"indent":[]}},{"type":"text","value":"是可以传入三个参数的，第三个参数就是中间件，使用","position":{"start":{"line":155,"column":27,"offset":4019},"end":{"line":155,"column":51,"offset":4043},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">redux</code>","position":{"start":{"line":155,"column":51,"offset":4043},"end":{"line":155,"column":58,"offset":4050},"indent":[]}},{"type":"text","value":"提供的","position":{"start":{"line":155,"column":58,"offset":4050},"end":{"line":155,"column":61,"offset":4053},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">applyMiddleware</code>","position":{"start":{"line":155,"column":61,"offset":4053},"end":{"line":155,"column":78,"offset":4070},"indent":[]}},{"type":"text","value":"来调用，","position":{"start":{"line":155,"column":78,"offset":4070},"end":{"line":155,"column":82,"offset":4074},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">applyMiddleware</code>","position":{"start":{"line":155,"column":82,"offset":4074},"end":{"line":155,"column":99,"offset":4091},"indent":[]}},{"type":"text","value":"相当于是对","position":{"start":{"line":155,"column":99,"offset":4091},"end":{"line":155,"column":104,"offset":4096},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">dispatch</code>","position":{"start":{"line":155,"column":104,"offset":4096},"end":{"line":155,"column":114,"offset":4106},"indent":[]}},{"type":"text","value":"的一种增强，通过中间件可以在","position":{"start":{"line":155,"column":114,"offset":4106},"end":{"line":155,"column":128,"offset":4120},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">dispatch</code>","position":{"start":{"line":155,"column":128,"offset":4120},"end":{"line":155,"column":138,"offset":4130},"indent":[]}},{"type":"text","value":"过程中做一些事情，比如打logger、thunk(异步action)等等。","position":{"start":{"line":155,"column":138,"offset":4130},"end":{"line":155,"column":175,"offset":4167},"indent":[]}}],"position":{"start":{"line":155,"column":1,"offset":3993},"end":{"line":155,"column":175,"offset":4167},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"使用方式如下：","position":{"start":{"line":157,"column":1,"offset":4169},"end":{"line":157,"column":8,"offset":4176},"indent":[]}}],"position":{"start":{"line":157,"column":1,"offset":4169},"end":{"line":157,"column":8,"offset":4176},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//异步action中间件</span>\n<span class=\"token keyword\">import</span> thunk <span class=\"token keyword\">from</span> <span class=\"token string\">\"redux-thunk\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> Redux<span class=\"token punctuation\">.</span><span class=\"token function\">createStore</span><span class=\"token punctuation\">(</span>reducer<span class=\"token punctuation\">,</span>initialState<span class=\"token punctuation\">,</span><span class=\"token function\">applMiddleware</span><span class=\"token punctuation\">(</span>thunk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":158,"column":1,"offset":4177},"end":{"line":162,"column":4,"offset":4310},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"思想先告一段落，既然懂得了","position":{"start":{"line":163,"column":1,"offset":4311},"end":{"line":163,"column":14,"offset":4324},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">redux</code>","position":{"start":{"line":163,"column":14,"offset":4324},"end":{"line":163,"column":21,"offset":4331},"indent":[]}},{"type":"text","value":"的思想，那么接下来手下一个简易版的","position":{"start":{"line":163,"column":21,"offset":4331},"end":{"line":163,"column":38,"offset":4348},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">redux</code>","position":{"start":{"line":163,"column":38,"offset":4348},"end":{"line":163,"column":45,"offset":4355},"indent":[]}},{"type":"text","value":"。","position":{"start":{"line":163,"column":45,"offset":4355},"end":{"line":163,"column":46,"offset":4356},"indent":[]}}],"position":{"start":{"line":163,"column":1,"offset":4311},"end":{"line":163,"column":46,"offset":4356},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"手写一个min-Redux","position":{"start":{"line":164,"column":4,"offset":4360},"end":{"line":164,"column":17,"offset":4373},"indent":[]}}],"position":{"start":{"line":164,"column":1,"offset":4357},"end":{"line":164,"column":17,"offset":4373},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"新的react-hooks中除了","position":{"start":{"line":165,"column":1,"offset":4374},"end":{"line":165,"column":17,"offset":4390},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">useReducer</code>","position":{"start":{"line":165,"column":17,"offset":4390},"end":{"line":165,"column":29,"offset":4402},"indent":[]}},{"type":"text","value":"，集成了","position":{"start":{"line":165,"column":29,"offset":4402},"end":{"line":165,"column":33,"offset":4406},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">redux</code>","position":{"start":{"line":165,"column":33,"offset":4406},"end":{"line":165,"column":40,"offset":4413},"indent":[]}},{"type":"text","value":"的功能，为什么还要深入了解","position":{"start":{"line":165,"column":40,"offset":4413},"end":{"line":165,"column":53,"offset":4426},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">redux</code>","position":{"start":{"line":165,"column":53,"offset":4426},"end":{"line":165,"column":60,"offset":4433},"indent":[]}},{"type":"text","value":"呢？","position":{"start":{"line":165,"column":60,"offset":4433},"end":{"line":165,"column":62,"offset":4435},"indent":[]}}],"position":{"start":{"line":165,"column":1,"offset":4374},"end":{"line":165,"column":62,"offset":4435},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"随着前端技术的迭代，技术的快速更新，我们目前并没有能力去预知或者去引领前端的发展，唯一能做的就是在时代中吸收知识并消化知识，虽然未来有可能","position":{"start":{"line":167,"column":1,"offset":4437},"end":{"line":167,"column":70,"offset":4506},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">redux</code>","position":{"start":{"line":167,"column":70,"offset":4506},"end":{"line":167,"column":77,"offset":4513},"indent":[]}},{"type":"text","value":"会被","position":{"start":{"line":167,"column":77,"offset":4513},"end":{"line":167,"column":79,"offset":4515},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">useReducer</code>","position":{"start":{"line":167,"column":79,"offset":4515},"end":{"line":167,"column":91,"offset":4527},"indent":[]}},{"type":"text","value":"所取代，但是思想是不变的，","position":{"start":{"line":167,"column":91,"offset":4527},"end":{"line":167,"column":104,"offset":4540},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">redux</code>","position":{"start":{"line":167,"column":104,"offset":4540},"end":{"line":167,"column":111,"offset":4547},"indent":[]}},{"type":"text","value":"这个小而美的库设计是奇妙的，也许有哪一天在写业务的时候遇到了某种相似的需求，我们也可以通过借助于这个库的思想去做一些事情。","position":{"start":{"line":167,"column":111,"offset":4547},"end":{"line":167,"column":172,"offset":4608},"indent":[]}}],"position":{"start":{"line":167,"column":1,"offset":4437},"end":{"line":167,"column":172,"offset":4608},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"createStore","position":{"start":{"line":169,"column":5,"offset":4614},"end":{"line":169,"column":16,"offset":4625},"indent":[]}}],"position":{"start":{"line":169,"column":1,"offset":4610},"end":{"line":169,"column":16,"offset":4625},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"要想了解","position":{"start":{"line":170,"column":1,"offset":4626},"end":{"line":170,"column":5,"offset":4630},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">redux</code>","position":{"start":{"line":170,"column":5,"offset":4630},"end":{"line":170,"column":12,"offset":4637},"indent":[]}},{"type":"text","value":"，必然要先了解它的核心，它的核心就是","position":{"start":{"line":170,"column":12,"offset":4637},"end":{"line":170,"column":30,"offset":4655},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">createStore</code>","position":{"start":{"line":170,"column":30,"offset":4655},"end":{"line":170,"column":43,"offset":4668},"indent":[]}},{"type":"text","value":"这个函数，","position":{"start":{"line":170,"column":43,"offset":4668},"end":{"line":170,"column":48,"offset":4673},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">store</code>","position":{"start":{"line":170,"column":48,"offset":4673},"end":{"line":170,"column":55,"offset":4680},"indent":[]}},{"type":"text","value":"、","position":{"start":{"line":170,"column":55,"offset":4680},"end":{"line":170,"column":56,"offset":4681},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">getState</code>","position":{"start":{"line":170,"column":56,"offset":4681},"end":{"line":170,"column":66,"offset":4691},"indent":[]}},{"type":"text","value":",","position":{"start":{"line":170,"column":66,"offset":4691},"end":{"line":170,"column":67,"offset":4692},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">dispatch</code>","position":{"start":{"line":170,"column":67,"offset":4692},"end":{"line":170,"column":77,"offset":4702},"indent":[]}},{"type":"text","value":"都在这里产出。我个人觉得","position":{"start":{"line":170,"column":77,"offset":4702},"end":{"line":170,"column":89,"offset":4714},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">createStore</code>","position":{"start":{"line":170,"column":89,"offset":4714},"end":{"line":170,"column":102,"offset":4727},"indent":[]}},{"type":"text","value":"是一个提供一系列方法的订阅发布者模式：通过","position":{"start":{"line":170,"column":102,"offset":4727},"end":{"line":170,"column":123,"offset":4748},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">subscribe</code>","position":{"start":{"line":170,"column":123,"offset":4748},"end":{"line":170,"column":134,"offset":4759},"indent":[]}},{"type":"text","value":"订阅","position":{"start":{"line":170,"column":134,"offset":4759},"end":{"line":170,"column":136,"offset":4761},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">store</code>","position":{"start":{"line":170,"column":136,"offset":4761},"end":{"line":170,"column":143,"offset":4768},"indent":[]}},{"type":"text","value":"的变化，通过","position":{"start":{"line":170,"column":143,"offset":4768},"end":{"line":170,"column":149,"offset":4774},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">dispatch</code>","position":{"start":{"line":170,"column":149,"offset":4774},"end":{"line":170,"column":159,"offset":4784},"indent":[]}},{"type":"text","value":"派发。那么下面就来实现一下这个","position":{"start":{"line":170,"column":159,"offset":4784},"end":{"line":170,"column":174,"offset":4799},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">createStore</code>","position":{"start":{"line":170,"column":174,"offset":4799},"end":{"line":170,"column":187,"offset":4812},"indent":[]}},{"type":"text","value":"。","position":{"start":{"line":170,"column":187,"offset":4812},"end":{"line":170,"column":188,"offset":4813},"indent":[]}}],"position":{"start":{"line":170,"column":1,"offset":4626},"end":{"line":170,"column":188,"offset":4813},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"从上面","position":{"start":{"line":172,"column":1,"offset":4815},"end":{"line":172,"column":4,"offset":4818},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">store</code>","position":{"start":{"line":172,"column":4,"offset":4818},"end":{"line":172,"column":11,"offset":4825},"indent":[]}},{"type":"text","value":"中可以看出。创建一个","position":{"start":{"line":172,"column":11,"offset":4825},"end":{"line":172,"column":21,"offset":4835},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">store</code>","position":{"start":{"line":172,"column":21,"offset":4835},"end":{"line":172,"column":28,"offset":4842},"indent":[]}},{"type":"text","value":"需要三个参数；","position":{"start":{"line":172,"column":28,"offset":4842},"end":{"line":172,"column":35,"offset":4849},"indent":[]}}],"position":{"start":{"line":172,"column":1,"offset":4815},"end":{"line":172,"column":35,"offset":4849},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//1.接受的rootReducer</span>\n<span class=\"token comment\">//2.初始化的状态</span>\n<span class=\"token comment\">//3.dispatch的增强器(中间件)</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">createStore</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">reducer<span class=\"token punctuation\">,</span>initialState<span class=\"token punctuation\">,</span>enhancer</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    \n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":173,"column":1,"offset":4850},"end":{"line":180,"column":4,"offset":4976},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">createStore</code>","position":{"start":{"line":181,"column":1,"offset":4977},"end":{"line":181,"column":14,"offset":4990},"indent":[]}},{"type":"text","value":"还返回一些列函数接口提供调用","position":{"start":{"line":181,"column":14,"offset":4990},"end":{"line":181,"column":28,"offset":5004},"indent":[]}}],"position":{"start":{"line":181,"column":1,"offset":4977},"end":{"line":181,"column":28,"offset":5004},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">crateStore</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">reducer<span class=\"token punctuation\">,</span> initialState<span class=\"token punctuation\">,</span> enhancer</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    \n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        getState<span class=\"token punctuation\">,</span>\n        dispatch<span class=\"token punctuation\">,</span>\n        subscribe<span class=\"token punctuation\">,</span>\n        replaceReducer<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":182,"column":1,"offset":5005},"end":{"line":192,"column":4,"offset":5177},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"以下代码都是在createStore内部","position":{"start":{"line":193,"column":3,"offset":5180},"end":{"line":193,"column":23,"offset":5200},"indent":[]}}],"position":{"start":{"line":193,"column":1,"offset":5178},"end":{"line":193,"column":25,"offset":5202},"indent":[]}}],"position":{"start":{"line":193,"column":1,"offset":5178},"end":{"line":193,"column":25,"offset":5202},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"getState的实现","position":{"start":{"line":194,"column":6,"offset":5208},"end":{"line":194,"column":17,"offset":5219},"indent":[]}}],"position":{"start":{"line":194,"column":1,"offset":5203},"end":{"line":194,"column":17,"offset":5219},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">getStore</code>","position":{"start":{"line":195,"column":1,"offset":5220},"end":{"line":195,"column":11,"offset":5230},"indent":[]}},{"type":"text","value":"方法的作用就是返回当前的","position":{"start":{"line":195,"column":11,"offset":5230},"end":{"line":195,"column":23,"offset":5242},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">store</code>","position":{"start":{"line":195,"column":23,"offset":5242},"end":{"line":195,"column":30,"offset":5249},"indent":[]}},{"type":"text","value":"。","position":{"start":{"line":195,"column":30,"offset":5249},"end":{"line":195,"column":31,"offset":5250},"indent":[]}}],"position":{"start":{"line":195,"column":1,"offset":5220},"end":{"line":195,"column":31,"offset":5250},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> state <span class=\"token operator\">=</span> initialState<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getState</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> state<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":196,"column":1,"offset":5251},"end":{"line":201,"column":4,"offset":5331},"indent":[1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"subscribe的实现","position":{"start":{"line":202,"column":6,"offset":5337},"end":{"line":202,"column":18,"offset":5349},"indent":[]}}],"position":{"start":{"line":202,"column":1,"offset":5332},"end":{"line":202,"column":18,"offset":5349},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">subscribe</code>","position":{"start":{"line":203,"column":1,"offset":5350},"end":{"line":203,"column":12,"offset":5361},"indent":[]}},{"type":"text","value":"是","position":{"start":{"line":203,"column":12,"offset":5361},"end":{"line":203,"column":13,"offset":5362},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">createStore</code>","position":{"start":{"line":203,"column":13,"offset":5362},"end":{"line":203,"column":26,"offset":5375},"indent":[]}},{"type":"text","value":"的订阅者，开发者通过这个方法订阅，当","position":{"start":{"line":203,"column":26,"offset":5375},"end":{"line":203,"column":44,"offset":5393},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">store</code>","position":{"start":{"line":203,"column":44,"offset":5393},"end":{"line":203,"column":51,"offset":5400},"indent":[]}},{"type":"text","value":"改变的时候执行监听函数。","position":{"start":{"line":203,"column":51,"offset":5400},"end":{"line":203,"column":63,"offset":5412},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">subscribe</code>","position":{"start":{"line":203,"column":63,"offset":5412},"end":{"line":203,"column":74,"offset":5423},"indent":[]}},{"type":"text","value":"是典型的高阶函数，它的返回值是一个函数，执行该函数移除当前监听函数。","position":{"start":{"line":203,"column":74,"offset":5423},"end":{"line":203,"column":108,"offset":5457},"indent":[]}}],"position":{"start":{"line":203,"column":1,"offset":5350},"end":{"line":203,"column":108,"offset":5457},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//创建一个监听时间队列</span>\n<span class=\"token keyword\">let</span> subQueue <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">subscribe</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">listener</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//把监听函数放入到监听队列里面</span>\n    subQueue<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>listener<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//找到当前监听函数的索引</span>\n        <span class=\"token keyword\">let</span> idx <span class=\"token operator\">=</span> subQueue<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>listener<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>idx <span class=\"token operator\">></span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">//通过监听函数的索引把监听函数移除掉。</span>\n            subQueue<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":204,"column":1,"offset":5458},"end":{"line":220,"column":4,"offset":5780},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"dispatch的实现","position":{"start":{"line":221,"column":6,"offset":5786},"end":{"line":221,"column":17,"offset":5797},"indent":[]}}],"position":{"start":{"line":221,"column":1,"offset":5781},"end":{"line":221,"column":17,"offset":5797},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">dispatch</code>","position":{"start":{"line":222,"column":1,"offset":5798},"end":{"line":222,"column":11,"offset":5808},"indent":[]}},{"type":"text","value":"是","position":{"start":{"line":222,"column":11,"offset":5808},"end":{"line":222,"column":12,"offset":5809},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">createStore</code>","position":{"start":{"line":222,"column":12,"offset":5809},"end":{"line":222,"column":25,"offset":5822},"indent":[]}},{"type":"text","value":"的发布者，","position":{"start":{"line":222,"column":25,"offset":5822},"end":{"line":222,"column":30,"offset":5827},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">dispatch</code>","position":{"start":{"line":222,"column":30,"offset":5827},"end":{"line":222,"column":40,"offset":5837},"indent":[]}},{"type":"text","value":"接受一个","position":{"start":{"line":222,"column":40,"offset":5837},"end":{"line":222,"column":44,"offset":5841},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">action</code>","position":{"start":{"line":222,"column":44,"offset":5841},"end":{"line":222,"column":52,"offset":5849},"indent":[]}},{"type":"text","value":"，来执行","position":{"start":{"line":222,"column":52,"offset":5849},"end":{"line":222,"column":56,"offset":5853},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">reducer</code>","position":{"start":{"line":222,"column":56,"offset":5853},"end":{"line":222,"column":65,"offset":5862},"indent":[]}},{"type":"text","value":"。","position":{"start":{"line":222,"column":65,"offset":5862},"end":{"line":222,"column":66,"offset":5863},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">dispatch</code>","position":{"start":{"line":222,"column":66,"offset":5863},"end":{"line":222,"column":76,"offset":5873},"indent":[]}},{"type":"text","value":"在执行","position":{"start":{"line":222,"column":76,"offset":5873},"end":{"line":222,"column":79,"offset":5876},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">reducer</code>","position":{"start":{"line":222,"column":79,"offset":5876},"end":{"line":222,"column":88,"offset":5885},"indent":[]}},{"type":"text","value":"的同时会执行所有的监听函数(也就是发布)。","position":{"start":{"line":222,"column":88,"offset":5885},"end":{"line":222,"column":109,"offset":5906},"indent":[]}}],"position":{"start":{"line":222,"column":1,"offset":5798},"end":{"line":222,"column":109,"offset":5906},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> currentReducer <span class=\"token operator\">=</span> reducer<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> isDispatch <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">dispatch</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">action</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//这里使用isDispatch做标示，就是说只有当上一个派发完成之后才能派发下一个</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>isDispatch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dispatch error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">{</span>\n        state <span class=\"token operator\">=</span> <span class=\"token function\">currentReducer</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span>action<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        isDispatch <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token keyword\">finally</span><span class=\"token punctuation\">{</span>\n        isDispatch <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token comment\">//执行所有的监听函数</span>\n    subQueue<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">sub</span> <span class=\"token operator\">=></span> <span class=\"token function\">sub</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> action<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":223,"column":1,"offset":5907},"end":{"line":242,"column":4,"offset":6335},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"replaceReducer","position":{"start":{"line":244,"column":6,"offset":6342},"end":{"line":244,"column":20,"offset":6356},"indent":[]}}],"position":{"start":{"line":244,"column":1,"offset":6337},"end":{"line":244,"column":20,"offset":6356},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">replaceReducer</code>","position":{"start":{"line":245,"column":1,"offset":6357},"end":{"line":245,"column":17,"offset":6373},"indent":[]}},{"type":"text","value":"顾名思义就是替换","position":{"start":{"line":245,"column":17,"offset":6373},"end":{"line":245,"column":25,"offset":6381},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">reducer</code>","position":{"start":{"line":245,"column":25,"offset":6381},"end":{"line":245,"column":34,"offset":6390},"indent":[]}},{"type":"text","value":"的意思。再执行","position":{"start":{"line":245,"column":34,"offset":6390},"end":{"line":245,"column":41,"offset":6397},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">createState</code>","position":{"start":{"line":245,"column":41,"offset":6397},"end":{"line":245,"column":54,"offset":6410},"indent":[]}},{"type":"text","value":"方法的时候","position":{"start":{"line":245,"column":54,"offset":6410},"end":{"line":245,"column":59,"offset":6415},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">reducer</code>","position":{"start":{"line":245,"column":59,"offset":6415},"end":{"line":245,"column":68,"offset":6424},"indent":[]}},{"type":"text","value":"就作为第一个参数传进去，如果后面想要重新换一个","position":{"start":{"line":245,"column":68,"offset":6424},"end":{"line":245,"column":91,"offset":6447},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">reducer</code>","position":{"start":{"line":245,"column":91,"offset":6447},"end":{"line":245,"column":100,"offset":6456},"indent":[]}},{"type":"text","value":"，来代码写一下。","position":{"start":{"line":245,"column":100,"offset":6456},"end":{"line":245,"column":108,"offset":6464},"indent":[]}}],"position":{"start":{"line":245,"column":1,"offset":6357},"end":{"line":245,"column":108,"offset":6464},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">replaceReducer</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">reducer</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//传入一个reduce作为参数，把它赋予currentReducer就可以了。</span>\n    currentReducer <span class=\"token operator\">=</span> reducer<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//更该之后会派发一次dispatch，为什么会派发等下再说。</span>\n    <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>type<span class=\"token punctuation\">:</span><span class=\"token string\">\"REPLACE\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":247,"column":1,"offset":6466},"end":{"line":254,"column":4,"offset":6658},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"dispatch({type:“INIT”});","position":{"start":{"line":255,"column":6,"offset":6664},"end":{"line":255,"column":30,"offset":6688},"indent":[]}}],"position":{"start":{"line":255,"column":1,"offset":6659},"end":{"line":255,"column":30,"offset":6688},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"上面已经实现了","position":{"start":{"line":256,"column":1,"offset":6689},"end":{"line":256,"column":8,"offset":6696},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">createStore</code>","position":{"start":{"line":256,"column":8,"offset":6696},"end":{"line":256,"column":21,"offset":6709},"indent":[]}},{"type":"text","value":"的四个方法，剩下的就是","position":{"start":{"line":256,"column":21,"offset":6709},"end":{"line":256,"column":32,"offset":6720},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">replaceReducer</code>","position":{"start":{"line":256,"column":32,"offset":6720},"end":{"line":256,"column":48,"offset":6736},"indent":[]}},{"type":"text","value":"中莫名的派发了一个","position":{"start":{"line":256,"column":48,"offset":6736},"end":{"line":256,"column":57,"offset":6745},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">type</code>","position":{"start":{"line":256,"column":57,"offset":6745},"end":{"line":256,"column":63,"offset":6751},"indent":[]}},{"type":"text","value":"为","position":{"start":{"line":256,"column":63,"offset":6751},"end":{"line":256,"column":64,"offset":6752},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">REPLACE</code>","position":{"start":{"line":256,"column":64,"offset":6752},"end":{"line":256,"column":73,"offset":6761},"indent":[]}},{"type":"text","value":"的","position":{"start":{"line":256,"column":73,"offset":6761},"end":{"line":256,"column":74,"offset":6762},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">action</code>","position":{"start":{"line":256,"column":74,"offset":6762},"end":{"line":256,"column":82,"offset":6770},"indent":[]}},{"type":"text","value":"，而且翻到源码的最后，也派发一个","position":{"start":{"line":256,"column":82,"offset":6770},"end":{"line":256,"column":98,"offset":6786},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">type</code>","position":{"start":{"line":256,"column":98,"offset":6786},"end":{"line":256,"column":104,"offset":6792},"indent":[]}},{"type":"text","value":"为","position":{"start":{"line":256,"column":104,"offset":6792},"end":{"line":256,"column":105,"offset":6793},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">INIT</code>","position":{"start":{"line":256,"column":105,"offset":6793},"end":{"line":256,"column":111,"offset":6799},"indent":[]}},{"type":"text","value":"的","position":{"start":{"line":256,"column":111,"offset":6799},"end":{"line":256,"column":112,"offset":6800},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">action</code>","position":{"start":{"line":256,"column":112,"offset":6800},"end":{"line":256,"column":120,"offset":6808},"indent":[]}},{"type":"text","value":"，为什么呢？\n","position":{"start":{"line":256,"column":120,"offset":6808},"end":{"line":257,"column":1,"offset":6815},"indent":[1]}},{"type":"image","title":null,"url":"https://user-gold-cdn.xitu.io/2019/5/12/16aa96082edef36b?w=433&h=68&f=png&s=13221","alt":null,"position":{"start":{"line":257,"column":1,"offset":6815},"end":{"line":257,"column":87,"offset":6901},"indent":[]}}],"position":{"start":{"line":256,"column":1,"offset":6689},"end":{"line":257,"column":87,"offset":6901},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"其实当使用","position":{"start":{"line":259,"column":1,"offset":6903},"end":{"line":259,"column":6,"offset":6908},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">createStore</code>","position":{"start":{"line":259,"column":6,"offset":6908},"end":{"line":259,"column":19,"offset":6921},"indent":[]}},{"type":"text","value":"创建","position":{"start":{"line":259,"column":19,"offset":6921},"end":{"line":259,"column":21,"offset":6923},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Store</code>","position":{"start":{"line":259,"column":21,"offset":6923},"end":{"line":259,"column":28,"offset":6930},"indent":[]}},{"type":"text","value":"的时候，我们都知道，第一个参数为","position":{"start":{"line":259,"column":28,"offset":6930},"end":{"line":259,"column":44,"offset":6946},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">reducer</code>","position":{"start":{"line":259,"column":44,"offset":6946},"end":{"line":259,"column":53,"offset":6955},"indent":[]}},{"type":"text","value":"，第二个参数为初始化的","position":{"start":{"line":259,"column":53,"offset":6955},"end":{"line":259,"column":64,"offset":6966},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">state</code>","position":{"start":{"line":259,"column":64,"offset":6966},"end":{"line":259,"column":71,"offset":6973},"indent":[]}},{"type":"text","value":"。当如果不写第二个参数的时候，我们再来看一下","position":{"start":{"line":259,"column":71,"offset":6973},"end":{"line":259,"column":93,"offset":6995},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">reducer</code>","position":{"start":{"line":259,"column":93,"offset":6995},"end":{"line":259,"column":102,"offset":7004},"indent":[]}},{"type":"text","value":"的写法","position":{"start":{"line":259,"column":102,"offset":7004},"end":{"line":259,"column":105,"offset":7007},"indent":[]}}],"position":{"start":{"line":259,"column":1,"offset":6903},"end":{"line":259,"column":105,"offset":7007},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> reducer <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> action<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> state<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":260,"column":1,"offset":7008},"end":{"line":267,"column":4,"offset":7131},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"一般在写","position":{"start":{"line":268,"column":1,"offset":7132},"end":{"line":268,"column":5,"offset":7136},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">reducer</code>","position":{"start":{"line":268,"column":5,"offset":7136},"end":{"line":268,"column":14,"offset":7145},"indent":[]}},{"type":"text","value":"的时候都会给","position":{"start":{"line":268,"column":14,"offset":7145},"end":{"line":268,"column":20,"offset":7151},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">state</code>","position":{"start":{"line":268,"column":20,"offset":7151},"end":{"line":268,"column":27,"offset":7158},"indent":[]}},{"type":"text","value":"写一个默认值，并且","position":{"start":{"line":268,"column":27,"offset":7158},"end":{"line":268,"column":36,"offset":7167},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">default</code>","position":{"start":{"line":268,"column":36,"offset":7167},"end":{"line":268,"column":45,"offset":7176},"indent":[]}},{"type":"text","value":"出默认的","position":{"start":{"line":268,"column":45,"offset":7176},"end":{"line":268,"column":49,"offset":7180},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">state</code>","position":{"start":{"line":268,"column":49,"offset":7180},"end":{"line":268,"column":56,"offset":7187},"indent":[]}},{"type":"text","value":"。当","position":{"start":{"line":268,"column":56,"offset":7187},"end":{"line":268,"column":58,"offset":7189},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">createStore</code>","position":{"start":{"line":268,"column":58,"offset":7189},"end":{"line":268,"column":71,"offset":7202},"indent":[]}},{"type":"text","value":"不存在，这个默认值如何存储在","position":{"start":{"line":268,"column":71,"offset":7202},"end":{"line":268,"column":85,"offset":7216},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Store</code>","position":{"start":{"line":268,"column":85,"offset":7216},"end":{"line":268,"column":92,"offset":7223},"indent":[]}},{"type":"text","value":"中呢？就是这个最后派发的","position":{"start":{"line":268,"column":92,"offset":7223},"end":{"line":268,"column":104,"offset":7235},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">type:INIT</code>","position":{"start":{"line":268,"column":104,"offset":7235},"end":{"line":268,"column":115,"offset":7246},"indent":[]}},{"type":"text","value":"的作用。在","position":{"start":{"line":268,"column":115,"offset":7246},"end":{"line":268,"column":120,"offset":7251},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">replaceReducer</code>","position":{"start":{"line":268,"column":120,"offset":7251},"end":{"line":268,"column":136,"offset":7267},"indent":[]}},{"type":"text","value":"中派发也是这个原因，更换","position":{"start":{"line":268,"column":136,"offset":7267},"end":{"line":268,"column":148,"offset":7279},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">reducer</code>","position":{"start":{"line":268,"column":148,"offset":7279},"end":{"line":268,"column":157,"offset":7288},"indent":[]}},{"type":"text","value":"后派发。","position":{"start":{"line":268,"column":157,"offset":7288},"end":{"line":268,"column":161,"offset":7292},"indent":[]}}],"position":{"start":{"line":268,"column":1,"offset":7132},"end":{"line":268,"column":161,"offset":7292},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"完整的createStore","position":{"start":{"line":269,"column":6,"offset":7298},"end":{"line":269,"column":20,"offset":7312},"indent":[]}}],"position":{"start":{"line":269,"column":1,"offset":7293},"end":{"line":269,"column":20,"offset":7312},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"现在已经实现的差不多了，只要再加一些容错就可以了。","position":{"start":{"line":270,"column":1,"offset":7313},"end":{"line":270,"column":26,"offset":7338},"indent":[]}}],"position":{"start":{"line":270,"column":1,"offset":7313},"end":{"line":270,"column":26,"offset":7338},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">/**\n * \n * @param {*} reducer   //reducer\n * @param {*} initState    //初始状态\n * @param {*} middleware   //中间件\n */</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">createStore</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">reducer<span class=\"token punctuation\">,</span> initState<span class=\"token punctuation\">,</span>enhancer</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">let</span> initialState<span class=\"token punctuation\">;</span>       <span class=\"token comment\">//用于保存状态</span>\n    <span class=\"token keyword\">let</span> currentReducer <span class=\"token operator\">=</span> reducer<span class=\"token punctuation\">;</span>        <span class=\"token comment\">//reducer</span>\n    <span class=\"token keyword\">let</span> listenerQueue <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//存放所有的监听函数</span>\n    <span class=\"token keyword\">let</span> isDispatch <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>initState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        initialState <span class=\"token operator\">=</span> initState<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>enhancer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">enhancer</span><span class=\"token punctuation\">(</span>createStore<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>reducer<span class=\"token punctuation\">,</span>initState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">/**\n     * 获取Store\n     */</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getState</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//判断是否正在派发</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>isDispatch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dispatching...'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> initialState<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * 派发action 并触发所有的listeners\n     * @param {*} action \n     */</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">dispatch</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">action</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//判断是否正在派发</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>isDispatch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dispatching...'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">{</span>\n           isDispatch <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n           initialState <span class=\"token operator\">=</span> <span class=\"token function\">currentReducer</span><span class=\"token punctuation\">(</span>initialState<span class=\"token punctuation\">,</span>action<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">finally</span><span class=\"token punctuation\">{</span>\n            isDispatch <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">//执行所有的监听函数</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> listener <span class=\"token keyword\">of</span> listenerQueue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token function\">listener</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">/**\n     * 订阅监听\n     * @param {*} listener \n     */</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">subscribe</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">listener</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        listenerQueue<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>listener<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//移除监听</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token function\">unscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">let</span> index <span class=\"token operator\">=</span> listenerQueue<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>listener<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">let</span> unListener <span class=\"token operator\">=</span> listenerQueue<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> unListener<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * 替换reducer\n     * @param {*} reducer \n     */</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">replaceReducer</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">reducer</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>reducer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            currentReducer <span class=\"token operator\">=</span> reducer<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>type<span class=\"token punctuation\">:</span><span class=\"token string\">'REPLACE'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>type<span class=\"token punctuation\">:</span><span class=\"token string\">'INIT'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        getState<span class=\"token punctuation\">,</span>\n        dispatch<span class=\"token punctuation\">,</span>\n        subscribe<span class=\"token punctuation\">,</span>\n        replaceReducer\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> createStore<span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":271,"column":1,"offset":7339},"end":{"line":358,"column":4,"offset":9217},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"compose","position":{"start":{"line":359,"column":5,"offset":9222},"end":{"line":359,"column":12,"offset":9229},"indent":[]}}],"position":{"start":{"line":359,"column":1,"offset":9218},"end":{"line":359,"column":12,"offset":9229},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"在","position":{"start":{"line":360,"column":1,"offset":9230},"end":{"line":360,"column":2,"offset":9231},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">redux</code>","position":{"start":{"line":360,"column":2,"offset":9231},"end":{"line":360,"column":9,"offset":9238},"indent":[]}},{"type":"text","value":"中提供了一个组合函数，如果你知道函数式编程的话，那么对","position":{"start":{"line":360,"column":9,"offset":9238},"end":{"line":360,"column":36,"offset":9265},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">compose</code>","position":{"start":{"line":360,"column":36,"offset":9265},"end":{"line":360,"column":45,"offset":9274},"indent":[]}},{"type":"text","value":"一定不陌生。如果不了解的话，那我说一个场景肯定就懂了。","position":{"start":{"line":360,"column":45,"offset":9274},"end":{"line":360,"column":72,"offset":9301},"indent":[]}}],"position":{"start":{"line":360,"column":1,"offset":9230},"end":{"line":360,"column":72,"offset":9301},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//有fn1，fn2，fn3这三个函数，写出一个compose函数实现一下功能</span>\n<span class=\"token comment\">//1.  compose(fn1,fn2,fn3) 从右到左执行。</span>\n<span class=\"token comment\">//2.  上一个执行函数的结果作为下一个执行函数的参数。</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">compose</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    \n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":361,"column":1,"offset":9302},"end":{"line":368,"column":4,"offset":9450},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"上面的需求就是","position":{"start":{"line":369,"column":1,"offset":9451},"end":{"line":369,"column":8,"offset":9458},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">compose</code>","position":{"start":{"line":369,"column":8,"offset":9458},"end":{"line":369,"column":17,"offset":9467},"indent":[]}},{"type":"text","value":"函数，也是一个常考的面试题。如何实现实现一个","position":{"start":{"line":369,"column":17,"offset":9467},"end":{"line":369,"column":39,"offset":9489},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">compose</code>","position":{"start":{"line":369,"column":39,"offset":9489},"end":{"line":369,"column":48,"offset":9498},"indent":[]}},{"type":"text","value":"？一步一步来。","position":{"start":{"line":369,"column":48,"offset":9498},"end":{"line":369,"column":55,"offset":9505},"indent":[]}}],"position":{"start":{"line":369,"column":1,"offset":9451},"end":{"line":369,"column":55,"offset":9505},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"首先","position":{"start":{"line":371,"column":1,"offset":9507},"end":{"line":371,"column":3,"offset":9509},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">compose</code>","position":{"start":{"line":371,"column":3,"offset":9509},"end":{"line":371,"column":12,"offset":9518},"indent":[]}},{"type":"text","value":"接受的是一系列函数。","position":{"start":{"line":371,"column":12,"offset":9518},"end":{"line":371,"column":22,"offset":9528},"indent":[]}}],"position":{"start":{"line":371,"column":1,"offset":9507},"end":{"line":371,"column":22,"offset":9528},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">compose</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>fns</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    \n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":372,"column":1,"offset":9529},"end":{"line":376,"column":4,"offset":9575},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"从右到左执行，我们采用数组的","position":{"start":{"line":377,"column":1,"offset":9576},"end":{"line":377,"column":15,"offset":9590},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">reduce</code>","position":{"start":{"line":377,"column":15,"offset":9590},"end":{"line":377,"column":23,"offset":9598},"indent":[]}},{"type":"text","value":"方法，利用惰性求值的方式。","position":{"start":{"line":377,"column":23,"offset":9598},"end":{"line":377,"column":36,"offset":9611},"indent":[]}}],"position":{"start":{"line":377,"column":1,"offset":9576},"end":{"line":377,"column":36,"offset":9611},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">compose</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>fns</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> fns<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">f<span class=\"token punctuation\">,</span>g</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>args</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token function\">g</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":378,"column":1,"offset":9612},"end":{"line":380,"column":4,"offset":9695},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"这就是一个","position":{"start":{"line":381,"column":1,"offset":9696},"end":{"line":381,"column":6,"offset":9701},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">compose</code>","position":{"start":{"line":381,"column":6,"offset":9701},"end":{"line":381,"column":15,"offset":9710},"indent":[]}},{"type":"text","value":"函数。","position":{"start":{"line":381,"column":15,"offset":9710},"end":{"line":381,"column":18,"offset":9713},"indent":[]}}],"position":{"start":{"line":381,"column":1,"offset":9696},"end":{"line":381,"column":18,"offset":9713},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"揭开中间件的秘密-applayMiddleware","position":{"start":{"line":383,"column":5,"offset":9719},"end":{"line":383,"column":30,"offset":9744},"indent":[]}}],"position":{"start":{"line":383,"column":1,"offset":9715},"end":{"line":383,"column":30,"offset":9744},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">redux</code>","position":{"start":{"line":384,"column":1,"offset":9745},"end":{"line":384,"column":8,"offset":9752},"indent":[]}},{"type":"text","value":"中的中间件就是对","position":{"start":{"line":384,"column":8,"offset":9752},"end":{"line":384,"column":16,"offset":9760},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">dispatch</code>","position":{"start":{"line":384,"column":16,"offset":9760},"end":{"line":384,"column":26,"offset":9770},"indent":[]}},{"type":"text","value":"的一种增强，在","position":{"start":{"line":384,"column":26,"offset":9770},"end":{"line":384,"column":33,"offset":9777},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">createStore</code>","position":{"start":{"line":384,"column":33,"offset":9777},"end":{"line":384,"column":46,"offset":9790},"indent":[]}},{"type":"text","value":"中实现这个东西很简单。源码如下：","position":{"start":{"line":384,"column":46,"offset":9790},"end":{"line":384,"column":62,"offset":9806},"indent":[]}}],"position":{"start":{"line":384,"column":1,"offset":9745},"end":{"line":384,"column":62,"offset":9806},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">createStore</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">reducer<span class=\"token punctuation\">,</span>state<span class=\"token punctuation\">,</span>enhancer</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//判断第三个参数的存在。</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>enhancer <span class=\"token operator\">&amp;&amp;</span> type enhancer <span class=\"token operator\">===</span> <span class=\"token string\">'function'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//满足enhance存在的条件，直接return，组织后面的运行。</span>\n        <span class=\"token comment\">//通过柯里化的方式传参</span>\n        <span class=\"token comment\">//为什么传入createStore？</span>\n            <span class=\"token comment\">//虽然是增强，自然返回之后依然是一个store对象，所以要使用createStore做一些事情。</span>\n        <span class=\"token comment\">//后面两个参数</span>\n            <span class=\"token comment\">//中间件是增强，必要的reducer和state也必要通过createStore传进去。</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">enhancer</span><span class=\"token punctuation\">(</span>crateStore<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>reducer<span class=\"token punctuation\">,</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":385,"column":1,"offset":9807},"end":{"line":398,"column":4,"offset":10224},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"上面就是中间件再","position":{"start":{"line":399,"column":1,"offset":10225},"end":{"line":399,"column":9,"offset":10233},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">createStore</code>","position":{"start":{"line":399,"column":9,"offset":10233},"end":{"line":399,"column":22,"offset":10246},"indent":[]}},{"type":"text","value":"中的实现。","position":{"start":{"line":399,"column":22,"offset":10246},"end":{"line":399,"column":27,"offset":10251},"indent":[]}}],"position":{"start":{"line":399,"column":1,"offset":10225},"end":{"line":399,"column":27,"offset":10251},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"中间件的构建通过","position":{"start":{"line":401,"column":1,"offset":10253},"end":{"line":401,"column":9,"offset":10261},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">applyMiddleware</code>","position":{"start":{"line":401,"column":9,"offset":10261},"end":{"line":401,"column":26,"offset":10278},"indent":[]}},{"type":"text","value":"实现，来看一下","position":{"start":{"line":401,"column":26,"offset":10278},"end":{"line":401,"column":33,"offset":10285},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">applyMiddleware</code>","position":{"start":{"line":401,"column":33,"offset":10285},"end":{"line":401,"column":50,"offset":10302},"indent":[]}},{"type":"text","value":"是怎么实现。由上面可以看出","position":{"start":{"line":401,"column":50,"offset":10302},"end":{"line":401,"column":63,"offset":10315},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">applyMiddleware</code>","position":{"start":{"line":401,"column":63,"offset":10315},"end":{"line":401,"column":80,"offset":10332},"indent":[]}},{"type":"text","value":"是一个柯里化函数。","position":{"start":{"line":401,"column":80,"offset":10332},"end":{"line":401,"column":89,"offset":10341},"indent":[]}}],"position":{"start":{"line":401,"column":1,"offset":10253},"end":{"line":401,"column":89,"offset":10341},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">applyMiddleware</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">crateStore</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>args</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    \n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":402,"column":1,"offset":10342},"end":{"line":406,"column":4,"offset":10413},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"在","position":{"start":{"line":407,"column":1,"offset":10414},"end":{"line":407,"column":2,"offset":10415},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">applyMiddleware</code>","position":{"start":{"line":407,"column":2,"offset":10415},"end":{"line":407,"column":19,"offset":10432},"indent":[]}},{"type":"text","value":"中需要执行","position":{"start":{"line":407,"column":19,"offset":10432},"end":{"line":407,"column":24,"offset":10437},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">createStore</code>","position":{"start":{"line":407,"column":24,"offset":10437},"end":{"line":407,"column":37,"offset":10450},"indent":[]}},{"type":"text","value":"来得到接口方法。","position":{"start":{"line":407,"column":37,"offset":10450},"end":{"line":407,"column":45,"offset":10458},"indent":[]}}],"position":{"start":{"line":407,"column":1,"offset":10414},"end":{"line":407,"column":45,"offset":10458},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">applyMiddleware</span> <span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>middlewares</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">createStore</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>args</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> store <span class=\"token operator\">=</span> <span class=\"token function\">createStore</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//占位dispatch，避免在中间件过程中调用</span>\n    <span class=\"token keyword\">let</span> <span class=\"token function-variable function\">dispatch</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">let</span> midllewareAPI <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        getState<span class=\"token punctuation\">:</span> store<span class=\"token punctuation\">.</span>getState<span class=\"token punctuation\">,</span>\n        dispatch<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">//把middlewareAPI传入每一个中间件中</span>\n    <span class=\"token keyword\">const</span> chain <span class=\"token operator\">=</span> middlewares<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">middleware</span> <span class=\"token operator\">=></span> <span class=\"token function\">middleware</span><span class=\"token punctuation\">(</span>middlewareAPI<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//增强dispatch生成，重写占位dispatch,把store的默认dispatch传进去，</span>\n    dispatch <span class=\"token operator\">=</span> <span class=\"token function\">compose</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>chain<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>store<span class=\"token punctuation\">.</span>dispatch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">//最后把增强的dispatch和store返回出去。</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token operator\">...</span>store<span class=\"token punctuation\">,</span>\n        dispatch\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":408,"column":1,"offset":10459},"end":{"line":430,"column":4,"offset":11063},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"上面就是","position":{"start":{"line":431,"column":1,"offset":11064},"end":{"line":431,"column":5,"offset":11068},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">applyMiddleware</code>","position":{"start":{"line":431,"column":5,"offset":11068},"end":{"line":431,"column":22,"offset":11085},"indent":[]}},{"type":"text","value":"的实现方法。","position":{"start":{"line":431,"column":22,"offset":11085},"end":{"line":431,"column":28,"offset":11091},"indent":[]}}],"position":{"start":{"line":431,"column":1,"offset":11064},"end":{"line":431,"column":28,"offset":11091},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"如何写一个中间件","position":{"start":{"line":433,"column":6,"offset":11098},"end":{"line":433,"column":14,"offset":11106},"indent":[]}}],"position":{"start":{"line":433,"column":1,"offset":11093},"end":{"line":433,"column":14,"offset":11106},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"根据","position":{"start":{"line":434,"column":1,"offset":11107},"end":{"line":434,"column":3,"offset":11109},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">applyMiddleware</code>","position":{"start":{"line":434,"column":3,"offset":11109},"end":{"line":434,"column":20,"offset":11126},"indent":[]}},{"type":"text","value":"中间件参数的传入，可以想出一个基本的中间件是这样的：","position":{"start":{"line":434,"column":20,"offset":11126},"end":{"line":434,"column":46,"offset":11152},"indent":[]}}],"position":{"start":{"line":434,"column":1,"offset":11107},"end":{"line":434,"column":46,"offset":11152},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">middleware</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">store</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token parameter\">next</span> <span class=\"token operator\">=></span> <span class=\"token parameter\">action</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//业务逻辑</span>\n    <span class=\"token comment\">//store是传入的middlewareAPI</span>\n    <span class=\"token comment\">//next是store基础的dispatch</span>\n    <span class=\"token comment\">//action是dispatch的action</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":435,"column":1,"offset":11153},"end":{"line":442,"column":4,"offset":11311},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"这就是一个中间件的逻辑了。","position":{"start":{"line":443,"column":1,"offset":11312},"end":{"line":443,"column":14,"offset":11325},"indent":[]}}],"position":{"start":{"line":443,"column":1,"offset":11312},"end":{"line":443,"column":14,"offset":11325},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"异步action","position":{"start":{"line":445,"column":6,"offset":11332},"end":{"line":445,"column":14,"offset":11340},"indent":[]}}],"position":{"start":{"line":445,"column":1,"offset":11327},"end":{"line":445,"column":14,"offset":11340},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"在写逻辑的时候必然会用到异步数据的，我们知道","position":{"start":{"line":446,"column":1,"offset":11341},"end":{"line":446,"column":23,"offset":11363},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">reducer</code>","position":{"start":{"line":446,"column":23,"offset":11363},"end":{"line":446,"column":32,"offset":11372},"indent":[]}},{"type":"text","value":"是纯函数，不允许有副作用操作的，从上面到现在也可以明白整个","position":{"start":{"line":446,"column":32,"offset":11372},"end":{"line":446,"column":61,"offset":11401},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">redux</code>","position":{"start":{"line":446,"column":61,"offset":11401},"end":{"line":446,"column":68,"offset":11408},"indent":[]}},{"type":"text","value":"都是函数式编程的思想，是不存在副作用的，那么异步数据怎么实现呢？必然是通过","position":{"start":{"line":446,"column":68,"offset":11408},"end":{"line":446,"column":105,"offset":11445},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">applyMiddleware</code>","position":{"start":{"line":446,"column":105,"offset":11445},"end":{"line":446,"column":122,"offset":11462},"indent":[]}},{"type":"text","value":"提供的中间件接口实现了。","position":{"start":{"line":446,"column":122,"offset":11462},"end":{"line":446,"column":134,"offset":11474},"indent":[]}}],"position":{"start":{"line":446,"column":1,"offset":11341},"end":{"line":446,"column":134,"offset":11474},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"异步中间件必须要求","position":{"start":{"line":448,"column":1,"offset":11476},"end":{"line":448,"column":10,"offset":11485},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">action</code>","position":{"start":{"line":448,"column":10,"offset":11485},"end":{"line":448,"column":18,"offset":11493},"indent":[]}},{"type":"text","value":"是一个函数，根据上面中间件的逻辑，我们来写一下。","position":{"start":{"line":448,"column":18,"offset":11493},"end":{"line":448,"column":42,"offset":11517},"indent":[]}}],"position":{"start":{"line":448,"column":1,"offset":11476},"end":{"line":448,"column":42,"offset":11517},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">middleware</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">store</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token parameter\">next</span> <span class=\"token operator\">=></span> <span class=\"token parameter\">action</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> action <span class=\"token operator\">===</span> <span class=\"token string\">'function'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">action</span><span class=\"token punctuation\">(</span>store<span class=\"token punctuation\">.</span>dispatch<span class=\"token punctuation\">,</span>store<span class=\"token punctuation\">.</span>getState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":449,"column":1,"offset":11518},"end":{"line":456,"column":4,"offset":11688},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"判断传入的","position":{"start":{"line":457,"column":1,"offset":11689},"end":{"line":457,"column":6,"offset":11694},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">action</code>","position":{"start":{"line":457,"column":6,"offset":11694},"end":{"line":457,"column":14,"offset":11702},"indent":[]}},{"type":"text","value":"是否是一个函数，如果是函数使用增强","position":{"start":{"line":457,"column":14,"offset":11702},"end":{"line":457,"column":31,"offset":11719},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">dispatch</code>","position":{"start":{"line":457,"column":31,"offset":11719},"end":{"line":457,"column":41,"offset":11729},"indent":[]}},{"type":"text","value":"，如果不是函数使用普通的","position":{"start":{"line":457,"column":41,"offset":11729},"end":{"line":457,"column":53,"offset":11741},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">dispatch</code>","position":{"start":{"line":457,"column":53,"offset":11741},"end":{"line":457,"column":63,"offset":11751},"indent":[]}},{"type":"text","value":"。","position":{"start":{"line":457,"column":63,"offset":11751},"end":{"line":457,"column":64,"offset":11752},"indent":[]}}],"position":{"start":{"line":457,"column":1,"offset":11689},"end":{"line":457,"column":64,"offset":11752},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"总结","position":{"start":{"line":459,"column":4,"offset":11757},"end":{"line":459,"column":6,"offset":11759},"indent":[]}}],"position":{"start":{"line":459,"column":1,"offset":11754},"end":{"line":459,"column":6,"offset":11759},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"到此为止就是我能力范围内所理解的","position":{"start":{"line":460,"column":1,"offset":11760},"end":{"line":460,"column":17,"offset":11776},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">Redux</code>","position":{"start":{"line":460,"column":17,"offset":11776},"end":{"line":460,"column":24,"offset":11783},"indent":[]}},{"type":"text","value":"。我个人认为，要学习一个东西一定要看一下它的源码，学习它的思想。技术更新迭代，思想是不变的，无非就是思想的转变。如果有不对的地方，还望大佬们指点。","position":{"start":{"line":460,"column":24,"offset":11783},"end":{"line":460,"column":97,"offset":11856},"indent":[]}}],"position":{"start":{"line":460,"column":1,"offset":11760},"end":{"line":460,"column":97,"offset":11856},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":460,"column":97,"offset":11856}}}}