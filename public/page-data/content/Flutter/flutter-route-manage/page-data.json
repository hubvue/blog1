{"componentChunkName":"component---src-templates-blog-post-js","path":"/content/Flutter/flutter-route-manage/","result":{"data":{"site":{"siteMetadata":{"title":"Kim Blog","author":"Kim"}},"markdownRemark":{"id":"b8ddeb18-893a-54f7-a0bd-7bb8ac48f576","excerpt":"无论是前端浏览器页面还是端上 App 路由管理是必不可少的，路由可以让页面间跳转更加流畅。因 Flutter 万物皆 Widget 的特定，路由的跳转其实也就是切换不同的 Widget，这和前端思想很相似（组件化开发），因此很好理解。接下来就看一下 Flutter…","html":"<p>无论是前端浏览器页面还是端上 App 路由管理是必不可少的，路由可以让页面间跳转更加流畅。因 Flutter 万物皆 Widget 的特定，路由的跳转其实也就是切换不同的 Widget，这和前端思想很相似（组件化开发），因此很好理解。接下来就看一下 Flutter 中组件是怎么切换的。</p>\n<p>在前端中有路由的概念，例如 Vue，有 vue-router 这个库，在 vue-router 中，所有可跳转的组件都会在路由中注册，用 route-link 组件来匹配要展示的视图，最终显示在 route-view 组件所在的位置。而 Flutter 中使用<code class=\"language-text\">Navigator</code>API 来控制路由的跳转。</p>\n<p>在 Flutter 中也会维护一个路由的历史记录栈，通过<code class=\"language-text\">Navigator.push()</code>做路由的前进(往记录栈中存路由记录)，通过<code class=\"language-text\">Navigator.pop()</code>做路由的后退(往记录栈中出路由记录)，很像浏览器的 HistoryAPI。</p>\n<h3>Navigator.push()</h3>\n<p><code class=\"language-text\">Navigator.push()</code>方法用于路由的前进，它接收两个参数：</p>\n<ol>\n<li>第一个是当前组件的 context(Flutter 万物皆组件)</li>\n<li>第二个是 MaterialPageRoute 类表示 Material 风格的路由切换动画</li>\n</ol>\n<p>由于平台的不同，对于不同的平台路由切换动画是会有些区别的</p>\n<ul>\n<li>对于 Android 平台，当打开新的页面时，新的页面会从屏幕底部滑动到屏幕顶部；当关闭页面的时候，当前页面会从屏幕顶部滑动到屏幕底部后消失，同时上一个页面会显示在屏幕上。</li>\n<li>对于 IOS 平台，当打开页面时，新的页面会从屏幕右侧边缘一致滑动到屏幕左边，知道新页面全部显示到屏幕上，而上一个页面则会从从当前屏幕滑动到屏幕左侧消失；当关闭页面时，正好相反，当前页面会从屏幕右侧滑出，同时上一个页面会从屏幕左侧滑入。</li>\n</ul>\n<p>下面来说一下<code class=\"language-text\">MaterialPageRoute</code>类</p>\n<p>MaterialPageRoute 类一共接收四个参数，其意义如下：</p>\n<ul>\n<li>builder：是一个 WidgetBuilder 类型的回调函数，它的作用是构建路由页面的具体内容，返回一个 widget，我们所做的就是实现这个回调，返回我们要跳转到新路由的实例</li>\n<li>settings：settings 包含路由的配置信息，如路由名称、是否是初始路由(首页)等</li>\n<li>maintainState：默认情况下，当入栈一个新路由时，原来的路由仍然会被保存在内存中，如果想在路由没用的时候释放其所占的所有资源，可将 maintainState 设置为 false</li>\n<li>fullscreeDialog：表示新的路由页面是否是一个全屏的模态对话框，在 IOS 中，如果 fullscreeDialog 为 true，新页面将会从屏幕底部滑入(而不是水平方向)</li>\n</ul>\n<p>🌰：\n有一个 HomePage 的 Widget</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">HomePage</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatefulWidget</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">final</span> String title<span class=\"token punctuation\">;</span>\n  <span class=\"token function\">HomePage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>Key key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">:</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token metadata symbol\">@override</span>\n  _HomePageState <span class=\"token function\">createState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">_HomePageState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">_HomePageState</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">State</span><span class=\"token operator\">&lt;</span>HomePage<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token metadata symbol\">@override</span>\n  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">Scaffold</span><span class=\"token punctuation\">(</span>\n      appBar<span class=\"token punctuation\">:</span> <span class=\"token function\">AppBar</span><span class=\"token punctuation\">(</span>\n        title<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Home Page'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      body<span class=\"token punctuation\">:</span> <span class=\"token function\">Center</span><span class=\"token punctuation\">(</span>\n        child<span class=\"token punctuation\">:</span> <span class=\"token function\">FlatButton</span><span class=\"token punctuation\">(</span>\n          child<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'open about page'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          textColor<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>red<span class=\"token punctuation\">,</span>\n          onPressed<span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">//TODO 跳转的逻辑</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>再写一个 AboutPage</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">AboutPage</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatelessWidget</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token metadata symbol\">@override</span>\n  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">Scaffold</span><span class=\"token punctuation\">(</span>\n      appBar<span class=\"token punctuation\">:</span> <span class=\"token function\">AppBar</span><span class=\"token punctuation\">(</span>\n        title<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'About Page'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      body<span class=\"token punctuation\">:</span> <span class=\"token function\">Center</span><span class=\"token punctuation\">(</span>\n        child<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'About Page Content'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>上面是两个页面的组件，我们要做的是从 HomePage 中点击按钮跳转到 AboutPage。下面来看一下按钮点击事件中的逻辑。</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\">onPressed<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  Navigator<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> <span class=\"token function\">MaterialPageRoute</span><span class=\"token punctuation\">(</span>builder<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">AboutPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>此时点击 HomePage 中的按钮就会跳转到 AboutPage 页。</p>\n<h3>Navitagor.pop()</h3>\n<p><code class=\"language-text\">Navitagor.pop()</code>用于路由的回退。我们在 AboutPage 中添加一个回退按钮</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">AboutPage</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatelessWidget</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token metadata symbol\">@override</span>\n  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">Scaffold</span><span class=\"token punctuation\">(</span>\n      appBar<span class=\"token punctuation\">:</span> <span class=\"token function\">AppBar</span><span class=\"token punctuation\">(</span>\n        title<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'About Page'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      body<span class=\"token punctuation\">:</span> <span class=\"token function\">Center</span><span class=\"token punctuation\">(</span>\n        child<span class=\"token punctuation\">:</span> <span class=\"token function\">FlatButton</span><span class=\"token punctuation\">(</span>\n          child<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'回退'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          textColor<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>blue<span class=\"token punctuation\">,</span>\n          onPressed<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> Navigator<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>当在 AboutPage 页面点击回退按钮时，Flutter 就回退到了 HomePage 页面。</p>\n<h3>Navigator.of()</h3>\n<p>Navigator 类中的第一个参数为 context 的静态方法都会对应一个 Navigator 的实例，例如：</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\">Navigator<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span><span class=\"token function\">MaterialPageRoute</span><span class=\"token punctuation\">(</span>builder<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">AboutPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">//等价于</span>\nNavigator<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token function\">MaterialPageRoute</span><span class=\"token punctuation\">(</span>builder<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">AboutPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nNavigator<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">//等价于</span>\nNavigator<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3>路由间传值</h3>\n<p>有页面间跳转，就必然少不了路由间传值，例如进入 App 首先进入一个活动列表页，点击活动列表页的一个活动进入该活动详情页，在详情页里就需要使用到活动 id 去请求该活动的数据，此时就需要从列表页点击活动进行路由跳转的时候带上活动 id。</p>\n<p>那么在 Flutter 中怎么做到路由间传值的呢？</p>\n<p>首先来说第一种方式：我们都知道每一个页面其实都是一个 Widget，严格来说都是一个类，可以在跳转的时候通过构造函数参数的形式传递进去。</p>\n<p>🌰</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">ActivityList</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatelessWidget</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token metadata symbol\">@override</span>\n  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">Scaffold</span><span class=\"token punctuation\">(</span>\n      appBar<span class=\"token punctuation\">:</span> <span class=\"token function\">AppBar</span><span class=\"token punctuation\">(</span>\n        title<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ActivityList'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      body<span class=\"token punctuation\">:</span> <span class=\"token function\">ListView</span><span class=\"token punctuation\">(</span>\n        children<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">></span><span class=\"token punctuation\">[</span>\n          <span class=\"token function\">FlatButton</span><span class=\"token punctuation\">(</span>\n            child<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'活动1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            textColor<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>red<span class=\"token punctuation\">,</span>\n            onPressed<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              Navigator<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token function\">MaterialPageRoute</span><span class=\"token punctuation\">(</span>builder<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> <span class=\"token function\">ActivityDetails</span><span class=\"token punctuation\">(</span>\n                  activityId<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n                <span class=\"token punctuation\">)</span>\n              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>接下来写活动详情类</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">ActivityDetails</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatelessWidget</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">final</span> num activityId<span class=\"token punctuation\">;</span>\n  <span class=\"token function\">ActivityDetails</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>Key key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>activityId<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">:</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token metadata symbol\">@override</span>\n Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext build<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">return</span> <span class=\"token function\">Scaffold</span><span class=\"token punctuation\">(</span>\n     appBar<span class=\"token punctuation\">:</span> <span class=\"token function\">AppBar</span><span class=\"token punctuation\">(</span>\n       title<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'活动详情页'</span><span class=\"token punctuation\">)</span>\n     <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n     body<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'活动Id为$activityId'</span><span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Flutter 的 NavigatorAPI 不仅提供了前进可以带数据，还提供了返回带参数。当使用 Navigator.pop()返回的时候，也可以带数据到前一个视图中。</p>\n<p>修改一下上面的组件。</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token comment\">//先修改ActivityDetails</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ActivityDetails</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatelessWidget</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">final</span> num activityId<span class=\"token punctuation\">;</span>\n  <span class=\"token function\">ActivityDetails</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>Key key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>activityId<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">:</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token metadata symbol\">@override</span>\n Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext build<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">return</span> <span class=\"token function\">Scaffold</span><span class=\"token punctuation\">(</span>\n     appBar<span class=\"token punctuation\">:</span> <span class=\"token function\">AppBar</span><span class=\"token punctuation\">(</span>\n       title<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'活动详情页'</span><span class=\"token punctuation\">)</span>\n     <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n     body<span class=\"token punctuation\">:</span><span class=\"token function\">Column</span><span class=\"token punctuation\">(</span>\n       children<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>Widget<span class=\"token operator\">></span><span class=\"token punctuation\">[</span>\n          <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'活动Id为$activityId'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          <span class=\"token function\">FlatButton</span><span class=\"token punctuation\">(</span>\n            child<span class=\"token punctuation\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'回退'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            textColor<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>green<span class=\"token punctuation\">,</span>\n            onPressed<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> Navigator<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token string\">'我是回退的内容'</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">)</span>\n       <span class=\"token punctuation\">]</span>\n     <span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token comment\">//修改ActivityList中的路由Wie可接受数据的</span>\nonPressed<span class=\"token punctuation\">:</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> Navigator<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token function\">MaterialPageRoute</span><span class=\"token punctuation\">(</span>builder<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">ActivityDetails</span><span class=\"token punctuation\">(</span>\n      activityId<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'result:$result'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>由于这个操作本身就是一个异步行为，所以在 ActivityList 中将 onPressed 改为异步的，Navigator.push()的返回值就是 Navigator.pop()中返回的值：<code class=\"language-text\">我是回退的内容</code>。</p>\n<h3>命名路由</h3>\n<p>通过上面内容已经知道了怎么去做路由的前进与回退和路由间传值。但是我们发现一个问题，路由的前进是通过返回组件实例来做的，难道说所有的组件都要写在一个文件里面吗？又或者所有的文件间引入来引入去吗？这很显然是不行的。</p>\n<p>好在 Flutter 提供命名路由的方案。命令路由就是说给每路由都起一个名字，在根组件中维护一个路由表，跳转匹配路由名称确定跳转到哪个页面下。</p>\n<p>路由表是一个 key-value 的 Map 结构，如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\">Map routes <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>String<span class=\"token punctuation\">,</span> WidgetBuilder<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">'/'</span><span class=\"token punctuation\">:</span> <span class=\"token function\">HomePage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'about'</span><span class=\"token punctuation\">:</span> <span class=\"token function\">AboutPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>router 的配置位置在 App Widget 中，在 MaterialApp 这个 Widget 中配置。</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token function\">MaterialApp</span><span class=\"token punctuation\">(</span>\n  title<span class=\"token punctuation\">:</span> <span class=\"token string\">'Flutter Deom'</span><span class=\"token punctuation\">,</span>\n  theme<span class=\"token punctuation\">:</span> <span class=\"token function\">ThemeData</span><span class=\"token punctuation\">(</span>primarySwatch<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>red<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  initialRoute<span class=\"token punctuation\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//名字为/的路由作为应用的home(首页)</span>\n  <span class=\"token comment\">// 路由生成钩子</span>\n  onGenerateRoute<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>RouteSettings settings<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">MaterialPageRoute</span><span class=\"token punctuation\">(</span>builder<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      String routeName <span class=\"token operator\">=</span> settings<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n      <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>routeName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// 注册路由表</span>\n  routes<span class=\"token punctuation\">:</span> routes\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>上面的 MaterialApp 去掉了 home，多了 initialRoute、onGenerateRoute、routes，这三个都是可命名路由相关的。</p>\n<ul>\n<li>initialRoute：指定命名路由最庸应用的 Home 页</li>\n<li>routes：注册路由表，我们写的 routes 要在这里注册</li>\n<li>onGenerateRoute：如果有路由并没有在 routes 里注册，那么将会走到这里，它是一个方法，return 一个 MaterialPageRoute，MaterialPageRoute 返回的 Widget 实例就是所要跳转的路由。主要是做的路由的兜底。</li>\n</ul>\n<p>使用命名路由的方式，在点击跳转的时候就不可以使用 push 了，而是使用 pushNamed 方法，这个方法的第一个参数指定路由表的 key 值。例如：</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\">Navigator<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pushNamed</span><span class=\"token punctuation\">(</span><span class=\"token string\">'about'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>命名路由的路由间传值</strong></p>\n<p>当使用命名路由的时候，由于在激活路由跳转的时候并不能操作路由 Widget 了，所以之前的一种传值就不能满足当前的写法。</p>\n<p><code class=\"language-text\">Navigator.pushNamed()</code>方法提供 arguments 的可选命名参数，arguments 就是需要转递到下一个路由的值。</p>\n<p>在下一个路由中使用<code class=\"language-text\">ModalRoute.of(context).settings.arguments</code>就可以取到 arguments。</p>\n<p>例如：</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token comment\">// 传值</span>\nNavigator<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pushNamed</span><span class=\"token punctuation\">(</span><span class=\"token string\">'about'</span><span class=\"token punctuation\">,</span> arguments<span class=\"token punctuation\">:</span> <span class=\"token string\">'Hello world'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//取值</span>\n<span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> ModalRoute<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>settings<span class=\"token punctuation\">.</span>arguments<span class=\"token punctuation\">;</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'上一个路由传过来的值：$result'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>如何管理路由</h3>\n<p>在写 Vue 和 React 的时候我们是把所有的页面放在 pages 目录下，创建一个 routes 目录，在这里做路由的统一管理。Flutter 也是一个 UI 库，其思想和前端框架并不相差太多，所以也可以使用这种工程目录结构。</p>\n<p>我们来简单定义一个工程目录结构。</p>\n<div class=\"gatsby-highlight\" data-language=\"txt\"><pre class=\"language-txt\"><code class=\"language-txt\"> /--\n  |--pages\n    - HomePage.dart\n    - AboutPage.dart\n  |--routes\n    -index.dart\n  - main.dart</code></pre></div>\n<p>在 index.dart 中定义路由表。</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token comment\">//引入Material风格Widget</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//引入Page下的Widget</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter_demo/pages/HomePage.dart'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter_demo/pages/AboutPage.dart'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//定义路由表</span>\nMap routes <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>String<span class=\"token punctuation\">,</span> WidgetBuilder<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">'/'</span><span class=\"token punctuation\">:</span> <span class=\"token function\">HomePage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'about'</span><span class=\"token punctuation\">:</span> <span class=\"token function\">AboutPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>在 main.dart 中引入<code class=\"language-text\">routes/index.dart</code>,并将 routes 注册到 MaterialApp 中。</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter_demo/routes/index.dart'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">runApp</span><span class=\"token punctuation\">(</span><span class=\"token function\">MyApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MyApp</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatelessWidget</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token metadata symbol\">@override</span>\n  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span>BuildContext context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">MaterialApp</span><span class=\"token punctuation\">(</span>\n        title<span class=\"token punctuation\">:</span> <span class=\"token string\">'Flutter Deom'</span><span class=\"token punctuation\">,</span>\n        theme<span class=\"token punctuation\">:</span> <span class=\"token function\">ThemeData</span><span class=\"token punctuation\">(</span>primarySwatch<span class=\"token punctuation\">:</span> Colors<span class=\"token punctuation\">.</span>red<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        initialRoute<span class=\"token punctuation\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//名字为/的路由作为应用的home(首页)</span>\n        onGenerateRoute<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>RouteSettings settings<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span> <span class=\"token function\">MaterialPageRoute</span><span class=\"token punctuation\">(</span>builder<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            String routeName <span class=\"token operator\">=</span> settings<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>routeName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// 注册路由表</span>\n        routes<span class=\"token punctuation\">:</span> routes\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>这样在写 Flutter 项目的时候就和写前端项目的体验相同了。</p>\n<h3>总结</h3>\n<p>Flutter 对前端来说还是很友好的，无论是 dart 语言还是 Flutter 框架的整体思想上和前端框架有很多相似的地方，个人感觉接收起来还是比较容易的，毕竟思想大致相同。Flutter 已经归属到了大前端体系下，值得尝试。</p>","frontmatter":{"title":"Flutter：路由管理","date":"December 06, 2019","description":"Flutter页面间路由管理","category":"Flutter"}}},"pageContext":{"slug":"/content/Flutter/flutter-route-manage/","previous":{"fields":{"slug":"/content/Vue/vue-use/"},"frontmatter":{"title":"Vue插件机制解析"}},"next":{"fields":{"slug":"/content/TypeScript/typescript-type-infer/"},"frontmatter":{"title":"TypeScript类型推断机制"}}}}}